// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	agent "github.com/openshift/hive/apis/hive/v1/agent"
	alibabacloud "github.com/openshift/hive/apis/hive/v1/alibabacloud"
	aws "github.com/openshift/hive/apis/hive/v1/aws"
	azure "github.com/openshift/hive/apis/hive/v1/azure"
	baremetal "github.com/openshift/hive/apis/hive/v1/baremetal"
	gcp "github.com/openshift/hive/apis/hive/v1/gcp"
	ibmcloud "github.com/openshift/hive/apis/hive/v1/ibmcloud"
	none "github.com/openshift/hive/apis/hive/v1/none"
	openstack "github.com/openshift/hive/apis/hive/v1/openstack"
	ovirt "github.com/openshift/hive/apis/hive/v1/ovirt"
	vsphere "github.com/openshift/hive/apis/hive/v1/vsphere"
)

// PlatformApplyConfiguration represents an declarative configuration of the Platform type for use
// with apply.
type PlatformApplyConfiguration struct {
	AlibabaCloud   *alibabacloud.Platform   `json:"alibabacloud,omitempty"`
	AWS            *aws.Platform            `json:"aws,omitempty"`
	Azure          *azure.Platform          `json:"azure,omitempty"`
	BareMetal      *baremetal.Platform      `json:"baremetal,omitempty"`
	GCP            *gcp.Platform            `json:"gcp,omitempty"`
	OpenStack      *openstack.Platform      `json:"openstack,omitempty"`
	VSphere        *vsphere.Platform        `json:"vsphere,omitempty"`
	Ovirt          *ovirt.Platform          `json:"ovirt,omitempty"`
	AgentBareMetal *agent.BareMetalPlatform `json:"agentBareMetal,omitempty"`
	IBMCloud       *ibmcloud.Platform       `json:"ibmcloud,omitempty"`
	None           *none.Platform           `json:"none,omitempty"`
}

// PlatformApplyConfiguration constructs an declarative configuration of the Platform type for use with
// apply.
func Platform() *PlatformApplyConfiguration {
	return &PlatformApplyConfiguration{}
}

// WithAlibabaCloud sets the AlibabaCloud field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AlibabaCloud field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithAlibabaCloud(value alibabacloud.Platform) *PlatformApplyConfiguration {
	b.AlibabaCloud = &value
	return b
}

// WithAWS sets the AWS field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AWS field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithAWS(value aws.Platform) *PlatformApplyConfiguration {
	b.AWS = &value
	return b
}

// WithAzure sets the Azure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Azure field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithAzure(value azure.Platform) *PlatformApplyConfiguration {
	b.Azure = &value
	return b
}

// WithBareMetal sets the BareMetal field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BareMetal field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithBareMetal(value baremetal.Platform) *PlatformApplyConfiguration {
	b.BareMetal = &value
	return b
}

// WithGCP sets the GCP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GCP field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithGCP(value gcp.Platform) *PlatformApplyConfiguration {
	b.GCP = &value
	return b
}

// WithOpenStack sets the OpenStack field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OpenStack field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithOpenStack(value openstack.Platform) *PlatformApplyConfiguration {
	b.OpenStack = &value
	return b
}

// WithVSphere sets the VSphere field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VSphere field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithVSphere(value vsphere.Platform) *PlatformApplyConfiguration {
	b.VSphere = &value
	return b
}

// WithOvirt sets the Ovirt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ovirt field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithOvirt(value ovirt.Platform) *PlatformApplyConfiguration {
	b.Ovirt = &value
	return b
}

// WithAgentBareMetal sets the AgentBareMetal field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AgentBareMetal field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithAgentBareMetal(value agent.BareMetalPlatform) *PlatformApplyConfiguration {
	b.AgentBareMetal = &value
	return b
}

// WithIBMCloud sets the IBMCloud field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IBMCloud field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithIBMCloud(value ibmcloud.Platform) *PlatformApplyConfiguration {
	b.IBMCloud = &value
	return b
}

// WithNone sets the None field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the None field is set to the value of the last call.
func (b *PlatformApplyConfiguration) WithNone(value none.Platform) *PlatformApplyConfiguration {
	b.None = &value
	return b
}
