apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: clusterpools.hive.openshift.io
spec:
  group: hive.openshift.io
  names:
    kind: ClusterPool
    listKind: ClusterPoolList
    plural: clusterpools
    shortNames:
    - cp
    singular: clusterpool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.size
      name: Size
      type: string
    - jsonPath: .status.standby
      name: Standby
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .spec.baseDomain
      name: BaseDomain
      type: string
    - jsonPath: .spec.imageSetRef.name
      name: ImageSet
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          ClusterPool represents a pool of clusters that should be kept ready to be given out to users. Clusters are removed
          from the pool once claimed and then automatically replaced with a new one.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterPoolSpec defines the desired state of the ClusterPool.
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations to be applied to new ClusterDeployments created for the pool. ClusterDeployments that have already been
                  claimed will not be affected when this value is modified.
                type: object
              baseDomain:
                description: BaseDomain is the base domain to use for all clusters
                  created in this pool.
                type: string
              claimLifetime:
                description: ClaimLifetime defines the lifetimes for claims for the
                  cluster pool.
                properties:
                  default:
                    description: |-
                      Default is the default lifetime of the claim when no lifetime is set on the claim itself.
                      This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats.
                      Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See
                      https://bugzilla.redhat.com/show_bug.cgi?id=2050332
                      https://github.com/kubernetes/apimachinery/issues/131
                      https://github.com/kubernetes/apiextensions-apiserver/issues/56
                    pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                    type: string
                  maximum:
                    description: |-
                      Maximum is the maximum lifetime of the claim after it is assigned a cluster. If the claim still exists
                      when the lifetime has elapsed, the claim will be deleted by Hive.
                      The lifetime of a claim is the mimimum of the lifetimes set by the cluster pool and the claim itself.
                      This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats.
                      Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See
                      https://bugzilla.redhat.com/show_bug.cgi?id=2050332
                      https://github.com/kubernetes/apimachinery/issues/131
                      https://github.com/kubernetes/apiextensions-apiserver/issues/56
                    pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                    type: string
                type: object
              customizationRef:
                description: |-
                  CustomizationRef refers to a ClusterDeploymentCustomization object whose InstallerManifestPatches should
                  be applied to *all* ClusterDeployments created by this ClusterPool. This is in addition to any CDC from
                  Inventory. The CDC must exist in the ClusterPool's namespace. It will be copied to the namespace of each
                  ClusterDeployment generated by the ClusterPool.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              hibernateAfter:
                description: |-
                  HibernateAfter will be applied to new ClusterDeployments created for the pool. HibernateAfter will transition
                  clusters in the clusterpool to hibernating power state after it has been running for the given duration. The time
                  that a cluster has been running is the time since the cluster was installed or the time since the cluster last came
                  out of hibernation.
                  This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats.
                  Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See
                  https://bugzilla.redhat.com/show_bug.cgi?id=2050332
                  https://github.com/kubernetes/apimachinery/issues/131
                  https://github.com/kubernetes/apiextensions-apiserver/issues/56
                pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                type: string
              hibernationConfig:
                description: HibernationConfig configures the hibernation/resume behavior
                  of ClusterDeployments owned by the ClusterPool.
                properties:
                  resumeTimeout:
                    description: |-
                      ResumeTimeout is the maximum amount of time we will wait for an unclaimed ClusterDeployment to resume from
                      hibernation (e.g. at the behest of runningCount, or in preparation for being claimed). If this time is
                      exceeded, the ClusterDeployment will be considered Broken and we will replace it. The default (unspecified
                      or zero) means no timeout -- we will allow the ClusterDeployment to continue trying to resume "forever".
                      This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats.
                      Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See
                      https://bugzilla.redhat.com/show_bug.cgi?id=2050332
                      https://github.com/kubernetes/apimachinery/issues/131
                      https://github.com/kubernetes/apiextensions-apiserver/issues/56
                    pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                    type: string
                type: object
              imageSetRef:
                description: |-
                  ImageSetRef is a reference to a ClusterImageSet. The release image specified in the ClusterImageSet will be used
                  by clusters created for this cluster pool.
                properties:
                  name:
                    description: Name is the name of the ClusterImageSet that this
                      refers to
                    type: string
                required:
                - name
                type: object
              installAttemptsLimit:
                description: InstallAttemptsLimit is the maximum number of times Hive
                  will attempt to install the cluster.
                format: int32
                type: integer
              installConfigSecretTemplateRef:
                description: |-
                  InstallConfigSecretTemplateRef is a secret with the key install-config.yaml consisting of the content of the install-config.yaml
                  to be used as a template for all clusters in this pool.
                  Cluster specific settings (name, basedomain) will be injected dynamically when the ClusterDeployment install-config Secret is generated.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              installerEnv:
                description: |-
                  InstallerEnv are extra environment variables to pass through to the installer. This may be used to enable
                  additional features of the installer.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              inventory:
                description: |-
                  Inventory maintains a list of entries consumed by the ClusterPool
                  to customize the default ClusterDeployment.
                items:
                  description: InventoryEntry maintains a reference to a custom resource
                    consumed by a clusterpool to customize the cluster deployment.
                  properties:
                    kind:
                      default: ClusterDeploymentCustomization
                      description: Kind denotes the kind of the referenced resource.
                        The default is ClusterDeploymentCustomization, which is also
                        currently the only supported value.
                      enum:
                      - ""
                      - ClusterDeploymentCustomization
                      type: string
                    name:
                      description: Name is the name of the referenced resource.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              labels:
                additionalProperties:
                  type: string
                description: |-
                  Labels to be applied to new ClusterDeployments created for the pool. ClusterDeployments that have already been
                  claimed will not be affected when this value is modified.
                type: object
              maxConcurrent:
                description: |-
                  MaxConcurrent is the maximum number of clusters that will be provisioned or deprovisioned at an time. This includes the
                  claimed clusters being deprovisioned.
                  By default there is no limit.
                format: int32
                type: integer
              maxSize:
                description: |-
                  MaxSize is the maximum number of clusters that will be provisioned including clusters that have been claimed
                  and ones waiting to be used.
                  By default there is no limit.
                format: int32
                type: integer
              platform:
                description: Platform encompasses the desired platform for the cluster.
                properties:
                  agentBareMetal:
                    description: |-
                      AgentBareMetal is the configuration used when performing an Assisted Agent based installation
                      to bare metal.
                    properties:
                      agentSelector:
                        description: |-
                          AgentSelector is a label selector used for associating relevant custom resources with this cluster.
                          (Agent, BareMetalHost, etc)
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - agentSelector
                    type: object
                  aws:
                    description: AWS is the configuration used when installing on
                      AWS.
                    properties:
                      credentialsAssumeRole:
                        description: |-
                          CredentialsAssumeRole refers to the IAM role that must be assumed to obtain
                          AWS account access for the cluster operations.
                        properties:
                          externalID:
                            description: |-
                              ExternalID is random string generated by platform so that assume role
                              is protected from confused deputy problem.
                              more info: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
                            type: string
                          roleARN:
                            type: string
                        required:
                        - roleARN
                        type: object
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef refers to a secret that contains the AWS account access
                          credentials.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      privateLink:
                        description: |-
                          PrivateLink allows uses to enable access to the cluster's API server using AWS
                          PrivateLink. AWS PrivateLink includes a pair of VPC Endpoint Service and VPC
                          Endpoint accross AWS accounts and allows clients to connect to services using AWS's
                          internal networking instead of the Internet.
                        properties:
                          additionalAllowedPrincipals:
                            description: |-
                              AdditionalAllowedPrincipals is a list of additional allowed principal ARNs to be configured
                              for the Private Link cluster's VPC Endpoint Service.
                              ARNs provided as AdditionalAllowedPrincipals will be configured for the cluster's VPC Endpoint
                              Service in addition to the IAM entity used by Hive.
                            items:
                              type: string
                            type: array
                          enabled:
                            type: boolean
                        required:
                        - enabled
                        type: object
                      region:
                        description: Region specifies the AWS region where the cluster
                          will be created.
                        type: string
                      userTags:
                        additionalProperties:
                          type: string
                        description: UserTags specifies additional tags for AWS resources
                          created for the cluster.
                        type: object
                    required:
                    - region
                    type: object
                  azure:
                    description: Azure is the configuration used when installing on
                      Azure.
                    properties:
                      baseDomainResourceGroupName:
                        description: BaseDomainResourceGroupName specifies the resource
                          group where the azure DNS zone for the base domain is found
                        type: string
                      cloudName:
                        description: |-
                          cloudName is the name of the Azure cloud environment which can be used to configure the Azure SDK
                          with the appropriate Azure API endpoints.
                          If empty, the value is equal to "AzurePublicCloud".
                        enum:
                        - ""
                        - AzurePublicCloud
                        - AzureUSGovernmentCloud
                        - AzureChinaCloud
                        - AzureGermanCloud
                        type: string
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef refers to a secret that contains the Azure account access
                          credentials.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      region:
                        description: Region specifies the Azure region where the cluster
                          will be created.
                        type: string
                    required:
                    - credentialsSecretRef
                    - region
                    type: object
                  baremetal:
                    description: BareMetal is the configuration used when installing
                      on bare metal.
                    properties:
                      libvirtSSHPrivateKeySecretRef:
                        description: |-
                          LibvirtSSHPrivateKeySecretRef is the reference to the secret that contains the private SSH key to use
                          for access to the libvirt provisioning host.
                          The SSH private key is expected to be in the secret data under the "ssh-privatekey" key.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - libvirtSSHPrivateKeySecretRef
                    type: object
                  gcp:
                    description: GCP is the configuration used when installing on
                      Google Cloud Platform.
                    properties:
                      credentialsSecretRef:
                        description: CredentialsSecretRef refers to a secret that
                          contains the GCP account access credentials.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      discardLocalSsdOnHibernate:
                        description: |-
                          DiscardLocalSsdOnHibernate passes the specified value through to the GCP API to indicate
                          whether the content of any local SSDs should be preserved or discarded. See
                          https://cloud.google.com/compute/docs/disks/local-ssd#stop_instance
                          This field is required when attempting to hibernate clusters with instances possessing
                          SSDs -- e.g. those with GPUs.
                        type: boolean
                      privateServiceConnect:
                        description: |-
                          PrivateSericeConnect allows users to enable access to the cluster's API server using GCP
                          Private Service Connect. It includes a forwarding rule paired with a Service Attachment
                          across GCP accounts and allows clients to connect to services using GCP internal networking
                          of using public load balancers.
                        properties:
                          enabled:
                            description: Enabled specifies if Private Service Connect
                              is to be enabled on the cluster.
                            type: boolean
                          serviceAttachment:
                            description: ServiceAttachment configures the service
                              attachment to be used by the cluster.
                            properties:
                              subnet:
                                description: Subnet configures the subnetwork that
                                  contains the service attachment.
                                properties:
                                  cidr:
                                    description: Cidr specifies the cidr to use when
                                      creating a service attachment subnet.
                                    type: string
                                  existing:
                                    description: |-
                                      Existing specifies a pre-existing subnet to use instead of creating a new service attachment subnet.
                                      This is required when using BYO VPCs. It must be in the same region as the api-int load balancer, be
                                      configured with a purpose of "Private Service Connect", and have sufficient routing and firewall rules
                                      to access the api-int load balancer.
                                    properties:
                                      name:
                                        description: Name specifies the name of the
                                          existing subnet.
                                        type: string
                                      project:
                                        description: |-
                                          Project specifies the project the subnet exists in.
                                          This is required for Shared VPC.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                            type: object
                        required:
                        - enabled
                        type: object
                      region:
                        description: Region specifies the GCP region where the cluster
                          will be created.
                        type: string
                    required:
                    - region
                    type: object
                  ibmcloud:
                    description: IBMCloud is the configuration used when installing
                      on IBM Cloud
                    properties:
                      accountID:
                        description: |-
                          AccountID is the IBM Cloud Account ID.
                          AccountID is DEPRECATED and is gathered via the IBM Cloud API for the provided
                          credentials. This field will be ignored.
                        type: string
                      cisInstanceCRN:
                        description: |-
                          CISInstanceCRN is the IBM Cloud Internet Services Instance CRN
                          CISInstanceCRN is DEPRECATED and gathered via the IBM Cloud API for the provided
                          credentials and cluster deployment base domain. This field will be ignored.
                        type: string
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef refers to a secret that contains IBM Cloud account access
                          credentials.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      region:
                        description: |-
                          Region specifies the IBM Cloud region where the cluster will be
                          created.
                        type: string
                    required:
                    - credentialsSecretRef
                    - region
                    type: object
                  none:
                    description: |-
                      None indicates platform-agnostic install.
                      https://docs.openshift.com/container-platform/4.7/installing/installing_platform_agnostic/installing-platform-agnostic.html
                    type: object
                  openstack:
                    description: OpenStack is the configuration used when installing
                      on OpenStack
                    properties:
                      certificatesSecretRef:
                        description: |-
                          CertificatesSecretRef refers to a secret that contains CA certificates
                          necessary for communicating with the OpenStack.
                          There is additional configuration required for the OpenShift cluster to trust
                          the certificates provided in this secret.
                          The "clouds.yaml" file included in the credentialsSecretRef Secret must also include
                          a reference to the certificate bundle file for the OpenShift cluster being created to
                          trust the OpenStack endpoints.
                          The "clouds.yaml" file must set the "cacert" field to
                          either "/etc/openstack-ca/<key name containing the trust bundle in credentialsSecretRef Secret>" or
                          "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem".

                          For example,
                          """clouds.yaml
                          clouds:
                            shiftstack:
                              auth: ...
                              cacert: "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
                          """
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      cloud:
                        description: |-
                          Cloud will be used to indicate the OS_CLOUD value to use the right section
                          from the clouds.yaml in the CredentialsSecretRef.
                        type: string
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef refers to a secret that contains the OpenStack account access
                          credentials.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      trunkSupport:
                        description: TrunkSupport indicates whether or not to use
                          trunk ports in your OpenShift cluster.
                        type: boolean
                    required:
                    - cloud
                    - credentialsSecretRef
                    type: object
                  ovirt:
                    description: Ovirt is the configuration used when installing on
                      oVirt
                    properties:
                      certificatesSecretRef:
                        description: |-
                          CertificatesSecretRef refers to a secret that contains the oVirt CA certificates
                          necessary for communicating with oVirt.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef refers to a secret that contains the oVirt account access
                          credentials with fields: ovirt_url, ovirt_username, ovirt_password, ovirt_ca_bundle
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      ovirt_cluster_id:
                        description: The target cluster under which all VMs will run
                        type: string
                      ovirt_network_name:
                        description: |-
                          The target network of all the network interfaces of the nodes. Omitting defaults to ovirtmgmt
                          network which is a default network for evert ovirt cluster.
                        type: string
                      storage_domain_id:
                        description: The target storage domain under which all VM
                          disk would be created.
                        type: string
                    required:
                    - certificatesSecretRef
                    - credentialsSecretRef
                    - ovirt_cluster_id
                    - storage_domain_id
                    type: object
                  vsphere:
                    description: VSphere is the configuration used when installing
                      on vSphere
                    properties:
                      certificatesSecretRef:
                        description: |-
                          CertificatesSecretRef refers to a secret that contains the vSphere CA certificates
                          necessary for communicating with the VCenter.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      cluster:
                        description: |-
                          Cluster is the name of the cluster virtual machines will be cloned into.
                          Deprecated: Please use Platform.VSphere instead
                          See also: Platform.ConvertDeprecatedFields
                        type: string
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef refers to a secret that contains the vSphere account access
                          credentials: GOVC_USERNAME, GOVC_PASSWORD fields.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      datacenter:
                        description: |-
                          Datacenter is the name of the datacenter to use in the vCenter.
                          Deprecated: Please use Platform.VSphere instead
                          See also: Platform.ConvertDeprecatedFields
                        type: string
                      defaultDatastore:
                        description: |-
                          DefaultDatastore is the default datastore to use for provisioning volumes.
                          Deprecated: Please use Platform.VSphere instead
                          See also: Platform.ConvertDeprecatedFields
                        type: string
                      folder:
                        description: |-
                          Folder is the name of the folder that will be used and/or created for
                          virtual machines.
                          Deprecated: Please use Platform.VSphere instead
                          See also: Platform.ConvertDeprecatedFields
                        type: string
                      network:
                        description: |-
                          Network specifies the name of the network to be used by the cluster.
                          Deprecated: Please use Platform.VSphere instead
                          See also: Platform.ConvertDeprecatedFields
                        type: string
                      vCenter:
                        description: |-
                          VCenter is the domain name or IP address of the vCenter.
                          Deprecated: Please use Platform.VSphere instead
                          See also: Platform.ConvertDeprecatedFields
                        type: string
                      vSphere:
                        description: VSphere is the full spec of the vSphere platform.
                        properties:
                          apiServerInternalIPs:
                            description: |-
                              apiServerInternalIPs are the IP addresses to contact the Kubernetes API
                              server that can be used by components inside the cluster, like kubelets
                              using the infrastructure rather than Kubernetes networking. These are the
                              IPs for a self-hosted load balancer in front of the API servers.
                              In dual stack clusters this list contains two IP addresses, one from IPv4
                              family and one from IPv6.
                              In single stack clusters a single IP address is expected.
                              When omitted, values from the status.apiServerInternalIPs will be used.
                              Once set, the list cannot be completely removed (but its second entry can).
                            items:
                              description: IP is an IP address (for example, "10.0.0.0"
                                or "fd00::").
                              maxLength: 39
                              minLength: 1
                              type: string
                              x-kubernetes-validations:
                              - message: value must be a valid IP address
                                rule: isIP(self)
                            maxItems: 2
                            type: array
                            x-kubernetes-list-type: atomic
                            x-kubernetes-validations:
                            - message: apiServerInternalIPs must contain at most one
                                IPv4 address and at most one IPv6 address
                              rule: 'size(self) == 2 && isIP(self[0]) && isIP(self[1])
                                ? ip(self[0]).family() != ip(self[1]).family() : true'
                          failureDomains:
                            description: |-
                              failureDomains contains the definition of region, zone and the vCenter topology.
                              If this is omitted failure domains (regions and zones) will not be used.
                            items:
                              description: VSpherePlatformFailureDomainSpec holds
                                the region and zone failure domain and the vCenter
                                topology of that failure domain.
                              properties:
                                name:
                                  description: |-
                                    name defines the arbitrary but unique name
                                    of a failure domain.
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                region:
                                  description: |-
                                    region defines the name of a region tag that will
                                    be attached to a vCenter datacenter. The tag
                                    category in vCenter must be named openshift-region.
                                  maxLength: 80
                                  minLength: 1
                                  type: string
                                regionAffinity:
                                  description: |-
                                    regionAffinity holds the type of region, Datacenter or ComputeCluster.
                                    When set to Datacenter, this means the region is a vCenter Datacenter as defined in topology.
                                    When set to ComputeCluster, this means the region is a vCenter Cluster as defined in topology.
                                  properties:
                                    type:
                                      description: |-
                                        type determines the vSphere object type for a region within this failure domain.
                                        Available types are Datacenter and ComputeCluster.
                                        When set to Datacenter, this means the vCenter Datacenter defined is the region.
                                        When set to ComputeCluster, this means the vCenter cluster defined is the region.
                                      enum:
                                      - ComputeCluster
                                      - Datacenter
                                      type: string
                                  required:
                                  - type
                                  type: object
                                server:
                                  description: server is the fully-qualified domain
                                    name or the IP address of the vCenter server.
                                  maxLength: 255
                                  minLength: 1
                                  type: string
                                topology:
                                  description: topology describes a given failure
                                    domain using vSphere constructs
                                  properties:
                                    computeCluster:
                                      description: |-
                                        computeCluster the absolute path of the vCenter cluster
                                        in which virtual machine will be located.
                                        The absolute path is of the form /<datacenter>/host/<cluster>.
                                        The maximum length of the path is 2048 characters.
                                      maxLength: 2048
                                      pattern: ^/.*?/host/.*?
                                      type: string
                                    datacenter:
                                      description: |-
                                        datacenter is the name of vCenter datacenter in which virtual machines will be located.
                                        The maximum length of the datacenter name is 80 characters.
                                      maxLength: 80
                                      type: string
                                    datastore:
                                      description: |-
                                        datastore is the absolute path of the datastore in which the
                                        virtual machine is located.
                                        The absolute path is of the form /<datacenter>/datastore/<datastore>
                                        The maximum length of the path is 2048 characters.
                                      maxLength: 2048
                                      pattern: ^/.*?/datastore/.*?
                                      type: string
                                    folder:
                                      description: |-
                                        folder is the absolute path of the folder where
                                        virtual machines are located. The absolute path
                                        is of the form /<datacenter>/vm/<folder>.
                                        The maximum length of the path is 2048 characters.
                                      maxLength: 2048
                                      pattern: ^/.*?/vm/.*?
                                      type: string
                                    networks:
                                      description: |-
                                        networks is the list of port group network names within this failure domain.
                                        If feature gate VSphereMultiNetworks is enabled, up to 10 network adapters may be defined.
                                        10 is the maximum number of virtual network devices which may be attached to a VM as defined by:
                                        https://configmax.esp.vmware.com/guest?vmwareproduct=vSphere&release=vSphere%208.0&categories=1-0
                                        The available networks (port groups) can be listed using
                                        `govc ls 'network/*'`
                                        Networks should be in the form of an absolute path:
                                        /<datacenter>/network/<portgroup>.
                                      items:
                                        type: string
                                      minItems: 1
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resourcePool:
                                      description: |-
                                        resourcePool is the absolute path of the resource pool where virtual machines will be
                                        created. The absolute path is of the form /<datacenter>/host/<cluster>/Resources/<resourcepool>.
                                        The maximum length of the path is 2048 characters.
                                      maxLength: 2048
                                      pattern: ^/.*?/host/.*?/Resources.*
                                      type: string
                                    template:
                                      description: |-
                                        template is the full inventory path of the virtual machine or template
                                        that will be cloned when creating new machines in this failure domain.
                                        The maximum length of the path is 2048 characters.

                                        When omitted, the template will be calculated by the control plane
                                        machineset operator based on the region and zone defined in
                                        VSpherePlatformFailureDomainSpec.
                                        For example, for zone=zonea, region=region1, and infrastructure name=test,
                                        the template path would be calculated as /<datacenter>/vm/test-rhcos-region1-zonea.
                                      maxLength: 2048
                                      minLength: 1
                                      pattern: ^/.*?/vm/.*?
                                      type: string
                                  required:
                                  - computeCluster
                                  - datacenter
                                  - datastore
                                  - networks
                                  type: object
                                zone:
                                  description: |-
                                    zone defines the name of a zone tag that will
                                    be attached to a vCenter cluster. The tag
                                    category in vCenter must be named openshift-zone.
                                  maxLength: 80
                                  minLength: 1
                                  type: string
                                zoneAffinity:
                                  description: |-
                                    zoneAffinity holds the type of the zone and the hostGroup which
                                    vmGroup and the hostGroup names in vCenter corresponds to
                                    a vm-host group of type Virtual Machine and Host respectively. Is also
                                    contains the vmHostRule which is an affinity vm-host rule in vCenter.
                                  properties:
                                    hostGroup:
                                      description: |-
                                        hostGroup holds the vmGroup and the hostGroup names in vCenter
                                        corresponds to a vm-host group of type Virtual Machine and Host respectively. Is also
                                        contains the vmHostRule which is an affinity vm-host rule in vCenter.
                                      properties:
                                        hostGroup:
                                          description: |-
                                            hostGroup is the name of the vm-host group of type host within vCenter for this failure domain.
                                            hostGroup is limited to 80 characters.
                                            This field is required when the VSphereFailureDomain ZoneType is HostGroup
                                          maxLength: 80
                                          minLength: 1
                                          type: string
                                        vmGroup:
                                          description: |-
                                            vmGroup is the name of the vm-host group of type virtual machine within vCenter for this failure domain.
                                            vmGroup is limited to 80 characters.
                                            This field is required when the VSphereFailureDomain ZoneType is HostGroup
                                          maxLength: 80
                                          minLength: 1
                                          type: string
                                        vmHostRule:
                                          description: |-
                                            vmHostRule is the name of the affinity vm-host rule within vCenter for this failure domain.
                                            vmHostRule is limited to 80 characters.
                                            This field is required when the VSphereFailureDomain ZoneType is HostGroup
                                          maxLength: 80
                                          minLength: 1
                                          type: string
                                      required:
                                      - hostGroup
                                      - vmGroup
                                      - vmHostRule
                                      type: object
                                    type:
                                      description: |-
                                        type determines the vSphere object type for a zone within this failure domain.
                                        Available types are ComputeCluster and HostGroup.
                                        When set to ComputeCluster, this means the vCenter cluster defined is the zone.
                                        When set to HostGroup, hostGroup must be configured with hostGroup, vmGroup and vmHostRule and
                                        this means the zone is defined by the grouping of those fields.
                                      enum:
                                      - HostGroup
                                      - ComputeCluster
                                      type: string
                                  required:
                                  - type
                                  type: object
                                  x-kubernetes-validations:
                                  - message: hostGroup is required when type is HostGroup,
                                      and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''HostGroup''
                                      ?  has(self.hostGroup) : !has(self.hostGroup)'
                              required:
                              - name
                              - region
                              - server
                              - topology
                              - zone
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          ingressIPs:
                            description: |-
                              ingressIPs are the external IPs which route to the default ingress
                              controller. The IPs are suitable targets of a wildcard DNS record used to
                              resolve default route host names.
                              In dual stack clusters this list contains two IP addresses, one from IPv4
                              family and one from IPv6.
                              In single stack clusters a single IP address is expected.
                              When omitted, values from the status.ingressIPs will be used.
                              Once set, the list cannot be completely removed (but its second entry can).
                            items:
                              description: IP is an IP address (for example, "10.0.0.0"
                                or "fd00::").
                              maxLength: 39
                              minLength: 1
                              type: string
                              x-kubernetes-validations:
                              - message: value must be a valid IP address
                                rule: isIP(self)
                            maxItems: 2
                            type: array
                            x-kubernetes-list-type: atomic
                            x-kubernetes-validations:
                            - message: ingressIPs must contain at most one IPv4 address
                                and at most one IPv6 address
                              rule: 'size(self) == 2 && isIP(self[0]) && isIP(self[1])
                                ? ip(self[0]).family() != ip(self[1]).family() : true'
                          machineNetworks:
                            description: |-
                              machineNetworks are IP networks used to connect all the OpenShift cluster
                              nodes. Each network is provided in the CIDR format and should be IPv4 or IPv6,
                              for example "10.0.0.0/8" or "fd00::/8".
                            items:
                              description: CIDR is an IP address range in CIDR notation
                                (for example, "10.0.0.0/8" or "fd00::/8").
                              maxLength: 43
                              minLength: 1
                              type: string
                              x-kubernetes-validations:
                              - message: value must be a valid CIDR network address
                                rule: isCIDR(self)
                            maxItems: 32
                            type: array
                            x-kubernetes-list-type: atomic
                            x-kubernetes-validations:
                            - rule: self.all(x, self.exists_one(y, x == y))
                          nodeNetworking:
                            description: |-
                              nodeNetworking contains the definition of internal and external network constraints for
                              assigning the node's networking.
                              If this field is omitted, networking defaults to the legacy
                              address selection behavior which is to only support a single address and
                              return the first one found.
                            properties:
                              external:
                                description: external represents the network configuration
                                  of the node that is externally routable.
                                properties:
                                  excludeNetworkSubnetCidr:
                                    description: |-
                                      excludeNetworkSubnetCidr IP addresses in subnet ranges will be excluded when selecting
                                      the IP address from the VirtualMachine's VM for use in the status.addresses fields.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  network:
                                    description: |-
                                      network VirtualMachine's VM Network names that will be used to when searching
                                      for status.addresses fields. Note that if internal.networkSubnetCIDR and
                                      external.networkSubnetCIDR are not set, then the vNIC associated to this network must
                                      only have a single IP address assigned to it.
                                      The available networks (port groups) can be listed using
                                      `govc ls 'network/*'`
                                    type: string
                                  networkSubnetCidr:
                                    description: |-
                                      networkSubnetCidr IP address on VirtualMachine's network interfaces included in the fields' CIDRs
                                      that will be used in respective status.addresses fields.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                type: object
                              internal:
                                description: internal represents the network configuration
                                  of the node that is routable only within the cluster.
                                properties:
                                  excludeNetworkSubnetCidr:
                                    description: |-
                                      excludeNetworkSubnetCidr IP addresses in subnet ranges will be excluded when selecting
                                      the IP address from the VirtualMachine's VM for use in the status.addresses fields.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  network:
                                    description: |-
                                      network VirtualMachine's VM Network names that will be used to when searching
                                      for status.addresses fields. Note that if internal.networkSubnetCIDR and
                                      external.networkSubnetCIDR are not set, then the vNIC associated to this network must
                                      only have a single IP address assigned to it.
                                      The available networks (port groups) can be listed using
                                      `govc ls 'network/*'`
                                    type: string
                                  networkSubnetCidr:
                                    description: |-
                                      networkSubnetCidr IP address on VirtualMachine's network interfaces included in the fields' CIDRs
                                      that will be used in respective status.addresses fields.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                type: object
                            type: object
                          vcenters:
                            description: |-
                              vcenters holds the connection details for services to communicate with vCenter.
                              Currently, only a single vCenter is supported, but in tech preview 3 vCenters are supported.
                              Once the cluster has been installed, you are unable to change the current number of defined
                              vCenters except in the case where the cluster has been upgraded from a version of OpenShift
                              where the vsphere platform spec was not present.  You may make modifications to the existing
                              vCenters that are defined in the vcenters list in order to match with any added or modified
                              failure domains.
                            items:
                              description: |-
                                VSpherePlatformVCenterSpec stores the vCenter connection fields.
                                This is used by the vSphere CCM.
                              properties:
                                datacenters:
                                  description: |-
                                    The vCenter Datacenters in which the RHCOS
                                    vm guests are located. This field will
                                    be used by the Cloud Controller Manager.
                                    Each datacenter listed here should be used within
                                    a topology.
                                  items:
                                    type: string
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: set
                                port:
                                  description: |-
                                    port is the TCP port that will be used to communicate to
                                    the vCenter endpoint.
                                    When omitted, this means the user has no opinion and
                                    it is up to the platform to choose a sensible default,
                                    which is subject to change over time.
                                  format: int32
                                  maximum: 32767
                                  minimum: 1
                                  type: integer
                                server:
                                  description: server is the fully-qualified domain
                                    name or the IP address of the vCenter server.
                                  maxLength: 255
                                  type: string
                              required:
                              - datacenters
                              - server
                              type: object
                            minItems: 0
                            type: array
                            x-kubernetes-list-type: atomic
                            x-kubernetes-validations:
                            - message: vcenters cannot be added or removed once set
                              rule: 'size(self) != size(oldSelf) ? size(oldSelf) ==
                                0 && size(self) < 2 : true'
                        type: object
                        x-kubernetes-validations:
                        - message: apiServerInternalIPs list is required once set
                          rule: '!has(oldSelf.apiServerInternalIPs) || has(self.apiServerInternalIPs)'
                        - message: ingressIPs list is required once set
                          rule: '!has(oldSelf.ingressIPs) || has(self.ingressIPs)'
                        - message: vcenters can have at most 1 item when configured
                            post-install
                          rule: '!has(oldSelf.vcenters) && has(self.vcenters) ? size(self.vcenters)
                            < 2 : true'
                    required:
                    - certificatesSecretRef
                    - credentialsSecretRef
                    - datacenter
                    - defaultDatastore
                    - vCenter
                    type: object
                type: object
              pullSecretRef:
                description: PullSecretRef is the reference to the secret to use when
                  pulling images.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              runningCount:
                description: |-
                  RunningCount is the number of clusters we should keep running. The remainder will be kept hibernated until claimed.
                  By default no clusters will be kept running (all will be hibernated).
                format: int32
                minimum: 0
                type: integer
              size:
                description: Size is the default number of clusters that we should
                  keep provisioned and waiting for use.
                format: int32
                minimum: 0
                type: integer
              skipMachinePools:
                description: SkipMachinePools allows creating clusterpools where the
                  machinepools are not managed by hive after cluster creation
                type: boolean
            required:
            - baseDomain
            - imageSetRef
            - platform
            - size
            type: object
          status:
            description: ClusterPoolStatus defines the observed state of ClusterPool
            properties:
              conditions:
                description: Conditions includes more detailed status for the cluster
                  pool
                items:
                  description: ClusterPoolCondition contains details for the current
                    condition of a cluster pool
                  properties:
                    lastProbeTime:
                      description: LastProbeTime is the last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is a unique, one-word, CamelCase reason
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready is the number of unclaimed clusters that are installed
                  and are running and ready to be claimed.
                format: int32
                type: integer
              size:
                description: Size is the number of unclaimed clusters that have been
                  created for the pool.
                format: int32
                type: integer
              standby:
                description: Standby is the number of unclaimed clusters that are
                  installed, but not running.
                format: int32
                type: integer
            required:
            - ready
            - size
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.size
        statusReplicasPath: .status.size
      status: {}
