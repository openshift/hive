// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ClusterStateStatusApplyConfiguration represents an declarative configuration of the ClusterStateStatus type for use
// with apply.
type ClusterStateStatusApplyConfiguration struct {
	LastUpdated      *v1.Time                                 `json:"lastUpdated,omitempty"`
	ClusterOperators []ClusterOperatorStateApplyConfiguration `json:"clusterOperators,omitempty"`
}

// ClusterStateStatusApplyConfiguration constructs an declarative configuration of the ClusterStateStatus type for use with
// apply.
func ClusterStateStatus() *ClusterStateStatusApplyConfiguration {
	return &ClusterStateStatusApplyConfiguration{}
}

// WithLastUpdated sets the LastUpdated field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastUpdated field is set to the value of the last call.
func (b *ClusterStateStatusApplyConfiguration) WithLastUpdated(value v1.Time) *ClusterStateStatusApplyConfiguration {
	b.LastUpdated = &value
	return b
}

// WithClusterOperators adds the given value to the ClusterOperators field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ClusterOperators field.
func (b *ClusterStateStatusApplyConfiguration) WithClusterOperators(values ...*ClusterOperatorStateApplyConfiguration) *ClusterStateStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithClusterOperators")
		}
		b.ClusterOperators = append(b.ClusterOperators, *values[i])
	}
	return b
}
