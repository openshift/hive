// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ClusterRelocateSpecApplyConfiguration represents an declarative configuration of the ClusterRelocateSpec type for use
// with apply.
type ClusterRelocateSpecApplyConfiguration struct {
	KubeconfigSecretRef       *KubeconfigSecretReferenceApplyConfiguration `json:"kubeconfigSecretRef,omitempty"`
	ClusterDeploymentSelector *metav1.LabelSelector                        `json:"clusterDeploymentSelector,omitempty"`
}

// ClusterRelocateSpecApplyConfiguration constructs an declarative configuration of the ClusterRelocateSpec type for use with
// apply.
func ClusterRelocateSpec() *ClusterRelocateSpecApplyConfiguration {
	return &ClusterRelocateSpecApplyConfiguration{}
}

// WithKubeconfigSecretRef sets the KubeconfigSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KubeconfigSecretRef field is set to the value of the last call.
func (b *ClusterRelocateSpecApplyConfiguration) WithKubeconfigSecretRef(value *KubeconfigSecretReferenceApplyConfiguration) *ClusterRelocateSpecApplyConfiguration {
	b.KubeconfigSecretRef = value
	return b
}

// WithClusterDeploymentSelector sets the ClusterDeploymentSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterDeploymentSelector field is set to the value of the last call.
func (b *ClusterRelocateSpecApplyConfiguration) WithClusterDeploymentSelector(value metav1.LabelSelector) *ClusterRelocateSpecApplyConfiguration {
	b.ClusterDeploymentSelector = &value
	return b
}
