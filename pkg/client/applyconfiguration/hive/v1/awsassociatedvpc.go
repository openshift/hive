// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
)

// AWSAssociatedVPCApplyConfiguration represents an declarative configuration of the AWSAssociatedVPC type for use
// with apply.
type AWSAssociatedVPCApplyConfiguration struct {
	AWSPrivateLinkVPCApplyConfiguration `json:",inline"`
	CredentialsSecretRef                *corev1.LocalObjectReference `json:"credentialsSecretRef,omitempty"`
}

// AWSAssociatedVPCApplyConfiguration constructs an declarative configuration of the AWSAssociatedVPC type for use with
// apply.
func AWSAssociatedVPC() *AWSAssociatedVPCApplyConfiguration {
	return &AWSAssociatedVPCApplyConfiguration{}
}

// WithVPCID sets the VPCID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VPCID field is set to the value of the last call.
func (b *AWSAssociatedVPCApplyConfiguration) WithVPCID(value string) *AWSAssociatedVPCApplyConfiguration {
	b.VPCID = &value
	return b
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *AWSAssociatedVPCApplyConfiguration) WithRegion(value string) *AWSAssociatedVPCApplyConfiguration {
	b.Region = &value
	return b
}

// WithCredentialsSecretRef sets the CredentialsSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CredentialsSecretRef field is set to the value of the last call.
func (b *AWSAssociatedVPCApplyConfiguration) WithCredentialsSecretRef(value corev1.LocalObjectReference) *AWSAssociatedVPCApplyConfiguration {
	b.CredentialsSecretRef = &value
	return b
}
