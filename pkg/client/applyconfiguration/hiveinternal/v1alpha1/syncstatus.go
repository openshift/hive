// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	hiveinternalv1alpha1 "github.com/openshift/hive/apis/hiveinternal/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// SyncStatusApplyConfiguration represents an declarative configuration of the SyncStatus type for use
// with apply.
type SyncStatusApplyConfiguration struct {
	Name               *string                                   `json:"name,omitempty"`
	ObservedGeneration *int64                                    `json:"observedGeneration,omitempty"`
	ResourcesToDelete  []SyncResourceReferenceApplyConfiguration `json:"resourcesToDelete,omitempty"`
	Result             *hiveinternalv1alpha1.SyncSetResult       `json:"result,omitempty"`
	FailureMessage     *string                                   `json:"failureMessage,omitempty"`
	LastTransitionTime *v1.Time                                  `json:"lastTransitionTime,omitempty"`
	FirstSuccessTime   *v1.Time                                  `json:"firstSuccessTime,omitempty"`
}

// SyncStatusApplyConfiguration constructs an declarative configuration of the SyncStatus type for use with
// apply.
func SyncStatus() *SyncStatusApplyConfiguration {
	return &SyncStatusApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithName(value string) *SyncStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithObservedGeneration(value int64) *SyncStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithResourcesToDelete adds the given value to the ResourcesToDelete field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ResourcesToDelete field.
func (b *SyncStatusApplyConfiguration) WithResourcesToDelete(values ...*SyncResourceReferenceApplyConfiguration) *SyncStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResourcesToDelete")
		}
		b.ResourcesToDelete = append(b.ResourcesToDelete, *values[i])
	}
	return b
}

// WithResult sets the Result field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Result field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithResult(value hiveinternalv1alpha1.SyncSetResult) *SyncStatusApplyConfiguration {
	b.Result = &value
	return b
}

// WithFailureMessage sets the FailureMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureMessage field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithFailureMessage(value string) *SyncStatusApplyConfiguration {
	b.FailureMessage = &value
	return b
}

// WithLastTransitionTime sets the LastTransitionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastTransitionTime field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithLastTransitionTime(value v1.Time) *SyncStatusApplyConfiguration {
	b.LastTransitionTime = &value
	return b
}

// WithFirstSuccessTime sets the FirstSuccessTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FirstSuccessTime field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithFirstSuccessTime(value v1.Time) *SyncStatusApplyConfiguration {
	b.FirstSuccessTime = &value
	return b
}
