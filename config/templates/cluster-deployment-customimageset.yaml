apiVersion: v1
kind: Template
metadata:
  name: cluster-deployment-customimageset-template

parameters:
- name: CLUSTER_NAME
  displayName: Cluster Name
  description: The name to give to the Cluster created. If using real AWS, then this name should include your username so that resources created in AWS can be identified as yours.
  required: true
- name: SSH_KEY
  displayName: SSH Key
  description: Your public SSH key to reach instances.
  required: true
- name: BASE_DOMAIN
  displayName: Base DNS Domain
  description: Base DNS domain for your cluster. Will be combined with cluster name when creating entries.
  value: new-installer.openshift.com
- name: PULL_SECRET
  displayName: Pull Secret for OpenShift Images
  description: Pull Secret for OpenShift Images
  required: true
- name: AWS_ACCESS_KEY_ID
  required: true
  description: Base64 encoded AWS access key ID that can be used to provision cluster resources.
- name: AWS_SECRET_ACCESS_KEY
  required: true
  description: Base64 encoded AWS secret access key that can be used to provision cluster resources.
- name: TRY_INSTALL_ONCE
  displayName: Try Install Only Once
  description: If set, install will only be tried once.
  value: "false"
- name: TRY_UNINSTALL_ONCE
  displayName: Try Uninstall Only Once
  description: If set, uninstall will only be tried once.
  value: "false"
- name: RELEASE_IMAGE
  displayName: Custom release image in custom ClusterImageSet
  description: Name of custom release image in custom ClusterImageSet. Defaults to latest in CI.
  value: "registry.svc.ci.openshift.org/openshift/origin-release:v4.0"

objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${CLUSTER_NAME}-aws-creds
  type: Opaque
  stringData:
    aws_access_key_id: ${AWS_ACCESS_KEY_ID}
    aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}

- apiVersion: v1
  kind: Secret
  metadata:
    name: ${CLUSTER_NAME}-pull-secret
  type: kubernetes.io/dockerconfigjson
  stringData:
    ".dockerconfigjson": "${PULL_SECRET}"

- apiVersion: v1
  kind: Secret
  metadata:
    name: ${CLUSTER_NAME}-ssh-key
  type: Opaque
  stringData:
    ssh-publickey: "${SSH_KEY}"

- apiVersion: hive.openshift.io/v1
  kind: ClusterImageSet
  metadata:
    labels:
      controller-tools.k8s.io: "1.0"
    name: custom
  spec:
    releaseImage: "${RELEASE_IMAGE}"

- apiVersion: hive.openshift.io/v1
  kind: ClusterDeployment
  metadata:
    labels:
      controller-tools.k8s.io: "1.0"
    annotations:
      hive.openshift.io/delete-after: "8h"
      hive.openshift.io/try-install-once: "${TRY_INSTALL_ONCE}"
      hive.openshift.io/try-uninstall-once: "${TRY_UNINSTALL_ONCE}"
      hive.openshift.io/cluster-type: "unmanaged"
    name: ${CLUSTER_NAME}
  spec:
    platformSecrets:
      aws:
        credentials:
          name: "${CLUSTER_NAME}-aws-creds"
    imageSet:
      name: "custom"
    sshKey:
      name: "${CLUSTER_NAME}-ssh-key"
    clusterName: ${CLUSTER_NAME}
    baseDomain: ${BASE_DOMAIN}
    networking:
      type: OpenShiftSDN
      serviceCIDR: "172.30.0.0/16"
      machineCIDR: "10.0.0.0/16"
      clusterNetworks:
        - cidr: "10.128.0.0/14"
          hostSubnetLength: 23
    platform:
      aws:
        region: us-east-1
    pullSecret:
      name: "${CLUSTER_NAME}-pull-secret"
    controlPlane:
      name: master
      replicas: 3
      platform:
        aws:
          type: m4.large
          rootVolume:
            iops: 100 # TODO
            size: 22
            type: gp2
    compute:
    - name: worker
      replicas: 3
      platform:
        aws:
          type: m4.large
          rootVolume:
            iops: 100 # TODO
            size: 22
            type: gp2
