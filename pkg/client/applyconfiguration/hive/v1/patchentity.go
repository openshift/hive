// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PatchEntityApplyConfiguration represents an declarative configuration of the PatchEntity type for use
// with apply.
type PatchEntityApplyConfiguration struct {
	Op    *string `json:"op,omitempty"`
	Path  *string `json:"path,omitempty"`
	From  *string `json:"from,omitempty"`
	Value *string `json:"value,omitempty"`
}

// PatchEntityApplyConfiguration constructs an declarative configuration of the PatchEntity type for use with
// apply.
func PatchEntity() *PatchEntityApplyConfiguration {
	return &PatchEntityApplyConfiguration{}
}

// WithOp sets the Op field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Op field is set to the value of the last call.
func (b *PatchEntityApplyConfiguration) WithOp(value string) *PatchEntityApplyConfiguration {
	b.Op = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *PatchEntityApplyConfiguration) WithPath(value string) *PatchEntityApplyConfiguration {
	b.Path = &value
	return b
}

// WithFrom sets the From field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the From field is set to the value of the last call.
func (b *PatchEntityApplyConfiguration) WithFrom(value string) *PatchEntityApplyConfiguration {
	b.From = &value
	return b
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *PatchEntityApplyConfiguration) WithValue(value string) *PatchEntityApplyConfiguration {
	b.Value = &value
	return b
}
