// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/hive/apis/hive/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DNSZoneConditionApplyConfiguration represents an declarative configuration of the DNSZoneCondition type for use
// with apply.
type DNSZoneConditionApplyConfiguration struct {
	Type               *v1.DNSZoneConditionType `json:"type,omitempty"`
	Status             *corev1.ConditionStatus  `json:"status,omitempty"`
	LastProbeTime      *metav1.Time             `json:"lastProbeTime,omitempty"`
	LastTransitionTime *metav1.Time             `json:"lastTransitionTime,omitempty"`
	Reason             *string                  `json:"reason,omitempty"`
	Message            *string                  `json:"message,omitempty"`
}

// DNSZoneConditionApplyConfiguration constructs an declarative configuration of the DNSZoneCondition type for use with
// apply.
func DNSZoneCondition() *DNSZoneConditionApplyConfiguration {
	return &DNSZoneConditionApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *DNSZoneConditionApplyConfiguration) WithType(value v1.DNSZoneConditionType) *DNSZoneConditionApplyConfiguration {
	b.Type = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *DNSZoneConditionApplyConfiguration) WithStatus(value corev1.ConditionStatus) *DNSZoneConditionApplyConfiguration {
	b.Status = &value
	return b
}

// WithLastProbeTime sets the LastProbeTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastProbeTime field is set to the value of the last call.
func (b *DNSZoneConditionApplyConfiguration) WithLastProbeTime(value metav1.Time) *DNSZoneConditionApplyConfiguration {
	b.LastProbeTime = &value
	return b
}

// WithLastTransitionTime sets the LastTransitionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastTransitionTime field is set to the value of the last call.
func (b *DNSZoneConditionApplyConfiguration) WithLastTransitionTime(value metav1.Time) *DNSZoneConditionApplyConfiguration {
	b.LastTransitionTime = &value
	return b
}

// WithReason sets the Reason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reason field is set to the value of the last call.
func (b *DNSZoneConditionApplyConfiguration) WithReason(value string) *DNSZoneConditionApplyConfiguration {
	b.Reason = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *DNSZoneConditionApplyConfiguration) WithMessage(value string) *DNSZoneConditionApplyConfiguration {
	b.Message = &value
	return b
}
