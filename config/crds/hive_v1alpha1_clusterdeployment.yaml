apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: clusterdeployments.hive.openshift.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.clusterName
    name: ClusterName
    type: string
  - JSONPath: .metadata.labels.hive\.openshift\.io/cluster-type
    name: ClusterType
    type: string
  - JSONPath: .spec.baseDomain
    name: BaseDomain
    type: string
  - JSONPath: .spec.installed
    name: Installed
    type: boolean
  - JSONPath: .status.infraID
    name: InfraID
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: hive.openshift.io
  names:
    kind: ClusterDeployment
    plural: clusterdeployments
    shortNames:
    - cd
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            baseDomain:
              description: BaseDomain is the base domain to which the cluster should
                belong.
              type: string
            certificateBundles:
              description: CertificateBundles is a list of certificate bundles associated
                with this cluster
              items:
                properties:
                  generate:
                    description: Generate indicates whether this bundle should have
                      real certificates generated for it.
                    type: boolean
                  name:
                    description: Name is an identifier that must be unique within
                      the bundle and must be referenced by an ingress or by the control
                      plane serving certs
                    type: string
                  secretRef:
                    description: SecretRef is the reference to the secret that contains
                      the certificate bundle. If the certificate bundle is to be generated,
                      it will be generated with the name in this reference. Otherwise,
                      it is expected that the secret should exist in the same namespace
                      as the ClusterDeployment
                    type: object
                required:
                - name
                type: object
              type: array
            clusterName:
              description: ClusterName is the friendly name of the cluster. It is
                used for subdomains, some resource tagging, and other instances where
                a friendly name for the cluster is useful.
              type: string
            compute:
              description: Compute is the list of MachinePools containing compute
                nodes that need to be installed.
              items:
                properties:
                  labels:
                    description: Map of label string keys and values that will be
                      applied to the created MachineSet's MachineSpec. This list will
                      overwrite any modifications made to Node labels on an ongoing
                      basis.
                    type: object
                  name:
                    description: Name is the name of the machine pool.
                    type: string
                  platform:
                    description: Platform is configuration for machine pool specific
                      to the platform.
                    properties:
                      aws:
                        description: AWS is the configuration used when installing
                          on AWS.
                        properties:
                          rootVolume:
                            description: EC2RootVolume defines the storage for ec2
                              instance.
                            properties:
                              iops:
                                description: IOPS defines the iops for the storage.
                                format: int64
                                type: integer
                              size:
                                description: Size defines the size of the storage.
                                format: int64
                                type: integer
                              type:
                                description: Type defines the type of the storage.
                                type: string
                            type: object
                          type:
                            description: InstanceType defines the ec2 instance type.
                              eg. m4-large
                            type: string
                          zones:
                            description: Zones is list of availability zones that
                              can be used.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  replicas:
                    description: Replicas is the count of machines for this machine
                      pool. Default is 1.
                    format: int64
                    type: integer
                  taints:
                    description: List of taints that will be applied to the created
                      MachineSet's MachineSpec. This list will overwrite any modifications
                      made to Node taints on an ongoing basis.
                    items:
                      type: object
                    type: array
                type: object
              type: array
            controlPlane:
              description: ControlPlane is the MachinePool containing control plane
                nodes that need to be installed.
              properties:
                labels:
                  description: Map of label string keys and values that will be applied
                    to the created MachineSet's MachineSpec. This list will overwrite
                    any modifications made to Node labels on an ongoing basis.
                  type: object
                name:
                  description: Name is the name of the machine pool.
                  type: string
                platform:
                  description: Platform is configuration for machine pool specific
                    to the platform.
                  properties:
                    aws:
                      description: AWS is the configuration used when installing on
                        AWS.
                      properties:
                        rootVolume:
                          description: EC2RootVolume defines the storage for ec2 instance.
                          properties:
                            iops:
                              description: IOPS defines the iops for the storage.
                              format: int64
                              type: integer
                            size:
                              description: Size defines the size of the storage.
                              format: int64
                              type: integer
                            type:
                              description: Type defines the type of the storage.
                              type: string
                          type: object
                        type:
                          description: InstanceType defines the ec2 instance type.
                            eg. m4-large
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                replicas:
                  description: Replicas is the count of machines for this machine
                    pool. Default is 1.
                  format: int64
                  type: integer
                taints:
                  description: List of taints that will be applied to the created
                    MachineSet's MachineSpec. This list will overwrite any modifications
                    made to Node taints on an ongoing basis.
                  items:
                    type: object
                  type: array
              type: object
            controlPlaneConfig:
              description: ControlPlaneConfig contains additional configuration for
                the target cluster's control plane
              properties:
                servingCertificates:
                  description: ServingCertificates specifies serving certificates
                    for the control plane
                  properties:
                    additional:
                      description: Additional is a list of additional domains and
                        certificates that are also associated with the control plane's
                        api endpoint.
                      items:
                        properties:
                          domain:
                            description: Domain is the domain of the additional control
                              plane certificate
                            type: string
                          name:
                            description: Name references a CertificateBundle in the
                              ClusterDeployment.Spec that should be used for this
                              additional certificate.
                            type: string
                        type: object
                      type: array
                    default:
                      description: Default references the name of a CertificateBundle
                        in the ClusterDeployment that should be used for the control
                        plane's default endpoint.
                      type: string
                  type: object
              type: object
            imageSet:
              description: ImageSet is a reference to a ClusterImageSet. If values
                are specified for Images, those will take precedence over the ones
                from the ClusterImageSet.
              properties:
                name:
                  description: Name is the name of the ClusterImageSet that this refers
                    to
                  type: string
              type: object
            images:
              description: Images allows overriding the default images used to provision
                and manage the cluster.
              properties:
                installerImage:
                  description: InstallerImage is the image containing the openshift-install
                    binary that will be used to install.
                  type: string
                installerImagePullPolicy:
                  description: InstallerImagePullPolicy is the pull policy for the
                    installer image.
                  type: string
                releaseImage:
                  description: ReleaseImage is the image containing metadata for all
                    components that run in the cluster, and is the primary and best
                    way to specify what specific version of OpenShift you wish to
                    install.
                  type: string
              type: object
            ingress:
              description: Ingress allows defining desired clusteringress/shards to
                be configured on the cluster.
              items:
                properties:
                  domain:
                    description: Domain (sometimes referred to as shard) is the full
                      DNS suffix that the resulting IngressController object will
                      service (eg abcd.mycluster.mydomain.com).
                    type: string
                  name:
                    description: Name of the ClusterIngress object to create.
                    type: string
                  namespaceSelector:
                    description: NamespaceSelector allows filtering the list of namespaces
                      serviced by the ingress controller.
                    type: object
                  routeSelector:
                    description: RouteSelector allows filtering the set of Routes
                      serviced by the ingress controller
                    type: object
                  servingCertificate:
                    description: ServingCertificate references a CertificateBundle
                      in the ClusterDeployment.Spec that should be used for this Ingress
                    type: string
                required:
                - name
                - domain
                type: object
              type: array
            installed:
              description: Installed is true if the cluster has been installed
              type: boolean
            manageDNS:
              description: ManageDNS specifies whether a DNSZone should be created
                and managed automatically for this ClusterDeployment
              type: boolean
            networking:
              description: Networking defines the pod network provider in the cluster.
              properties:
                clusterNetworks:
                  description: ClusterNetworks is the IP address space from which
                    to assign pod IPs.
                  items:
                    properties:
                      cidr:
                        type: string
                      hostSubnetLength:
                        format: int32
                        type: integer
                    type: object
                  type: array
                machineCIDR:
                  description: MachineCIDR is the IP address space from which to assign
                    machine IPs.
                  type: string
                serviceCIDR:
                  description: ServiceCIDR is the IP address space from which to assign
                    service IPs.
                  type: string
                type:
                  description: Type is the network type to install
                  type: string
              type: object
            platform:
              description: Platform is the configuration for the specific platform
                upon which to perform the installation.
              properties:
                aws:
                  description: AWS is the configuration used when installing on AWS.
                  properties:
                    defaultMachinePlatform:
                      description: DefaultMachinePlatform is the default configuration
                        used when installing on AWS for machine pools which do not
                        define their own platform configuration.
                      properties:
                        rootVolume:
                          description: EC2RootVolume defines the storage for ec2 instance.
                          properties:
                            iops:
                              description: IOPS defines the iops for the storage.
                              format: int64
                              type: integer
                            size:
                              description: Size defines the size of the storage.
                              format: int64
                              type: integer
                            type:
                              description: Type defines the type of the storage.
                              type: string
                          type: object
                        type:
                          description: InstanceType defines the ec2 instance type.
                            eg. m4-large
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      type: object
                    region:
                      description: Region specifies the AWS region where the cluster
                        will be created.
                      type: string
                    userTags:
                      description: UserTags specifies additional tags for AWS resources
                        created for the cluster.
                      type: object
                  type: object
                azure:
                  description: Azure is the configuration used when installing on
                    Azure.
                  properties:
                    baseDomainResourceGroupName:
                      description: BaseDomainResourceGroupName specifies the resource
                        group where the azure DNS zone for the base domain is found
                      type: string
                    defaultMachinePlatform:
                      description: DefaultMachinePlatform is the default configuration
                        used when installing on Azure for machine pools which do not
                        define their own platform configuration.
                      properties:
                        osDisk:
                          description: OSDisk defines the storage for instance.
                          properties:
                            diskSizeGB:
                              description: DiskSizeGB defines the size of disk in
                                GB.
                              format: int32
                              type: integer
                          type: object
                        type:
                          description: InstanceType defines the azure instance type.
                            eg. Standard_DS_V2
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used. eg. ["1", "2", "3"]
                          items:
                            type: string
                          type: array
                      type: object
                    region:
                      description: Region specifies the Azure region where the cluster
                        will be created.
                      type: string
                  type: object
                gcp:
                  description: GCP is the configuration used when installing on Google
                    Cloud Platform.
                  properties:
                    defaultMachinePlatform:
                      description: DefaultMachinePlatform is the default configuration
                        used when installing on GCP for machine pools which do not
                        define their own platform configuration.
                      properties:
                        type:
                          description: InstanceType defines the GCP instance type.
                            eg. n1-standard-4
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      type: object
                    projectID:
                      description: ProjectID is the the project that will be used
                        for the cluster.
                      type: string
                    region:
                      description: Region specifies the GCP region where the cluster
                        will be created.
                      type: string
                  type: object
              type: object
            platformSecrets:
              description: PlatformSecrets contains credentials and secrets for the
                cluster infrastructure.
              properties:
                aws:
                  properties:
                    credentials:
                      description: Credentials refers to a secret that contains the
                        AWS account access credentials.
                      type: object
                  type: object
              type: object
            preserveOnDelete:
              description: PreserveOnDelete allows the user to disconnect a cluster
                from Hive without deprovisioning it
              type: boolean
            pullSecret:
              description: PullSecret is the reference to the secret to use when pulling
                images.
              type: object
            sshKey:
              description: SSHKey is the reference to the secret that contains a public
                key to use for access to compute instances.
              type: object
          required:
          - clusterName
          - sshKey
          - baseDomain
          - networking
          - controlPlane
          - compute
          - platform
          - platformSecrets
          type: object
        status:
          properties:
            adminKubeconfigSecret:
              description: AdminKubeconfigSecret references the secret containing
                the admin kubeconfig for this cluster.
              type: object
            adminPasswordSecret:
              description: AdminPasswordSecret references the secret containing the
                admin username/password which can be used to login to this cluster.
              type: object
            apiURL:
              description: APIURL is the URL where the cluster's API can be accessed.
              type: string
            certificateBundles:
              description: CertificateBundles contains of the status of the certificate
                bundles associated with this cluster deployment.
              items:
                properties:
                  generated:
                    description: Generated indicates whether the certificate bundle
                      was generated
                    type: boolean
                  name:
                    description: Name of the certificate bundle
                    type: string
                type: object
              type: array
            cliImage:
              description: CLIImage is the name of the oc cli image to use when installing
                the target cluster
              type: string
            clusterID:
              description: ClusterID is a globally unique identifier for this cluster
                generated during installation. Used for reporting metrics among other
                places.
              type: string
            clusterVersionStatus:
              description: ClusterVersionStatus will hold a copy of the remote cluster's
                ClusterVersion.Status
              properties:
                availableUpdates:
                  description: availableUpdates contains the list of updates that
                    are appropriate for this cluster. This list may be empty if no
                    updates are recommended, if the update service is unavailable,
                    or if an invalid channel has been specified.
                  items:
                    properties:
                      force:
                        description: force allows an administrator to update to an
                          image that has failed verification, does not appear in the
                          availableUpdates list, or otherwise would be blocked by
                          normal protections on update. This option should only be
                          used when the authenticity of the provided image has been
                          verified out of band because the provided image will run
                          with full administrative access to the cluster. Do not use
                          this flag with images that comes from unknown or potentially
                          malicious sources.  This flag does not override other forms
                          of consistency checking that are required before a new update
                          is deployed.
                        type: boolean
                      image:
                        description: image is a container image location that contains
                          the update. When this field is part of spec, image is optional
                          if version is specified and the availableUpdates field contains
                          a matching version.
                        type: string
                      version:
                        description: version is a semantic versioning identifying
                          the update version. When this field is part of spec, version
                          is optional if image is specified.
                        type: string
                    type: object
                  nullable: true
                  type: array
                conditions:
                  description: conditions provides information about the cluster version.
                    The condition "Available" is set to true if the desiredUpdate
                    has been reached. The condition "Progressing" is set to true if
                    an update is being applied. The condition "Degraded" is set to
                    true if an update is currently blocked by a temporary or permanent
                    error. Conditions are only valid for the current desiredUpdate
                    when metadata.generation is equal to status.generation.
                  items:
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status object.
                        format: date-time
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the reason for the condition's last
                          transition.  Reasons are CamelCase
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the state of the operator's reconciliation
                          functionality.
                        type: string
                    type: object
                  type: array
                desired:
                  description: desired is the version that the cluster is reconciling
                    towards. If the cluster is not yet fully initialized desired will
                    be set with the information available, which may be an image or
                    a tag.
                  properties:
                    force:
                      description: force allows an administrator to update to an image
                        that has failed verification, does not appear in the availableUpdates
                        list, or otherwise would be blocked by normal protections
                        on update. This option should only be used when the authenticity
                        of the provided image has been verified out of band because
                        the provided image will run with full administrative access
                        to the cluster. Do not use this flag with images that comes
                        from unknown or potentially malicious sources.  This flag
                        does not override other forms of consistency checking that
                        are required before a new update is deployed.
                      type: boolean
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                  type: object
                history:
                  description: history contains a list of the most recent versions
                    applied to the cluster. This value may be empty during cluster
                    startup, and then will be updated when a new update is being applied.
                    The newest update is first in the list and it is ordered by recency.
                    Updates in the history have state Completed if the rollout completed
                    - if an update was failing or halfway applied the state will be
                    Partial. Only a limited amount of update history is preserved.
                  items:
                    properties:
                      completionTime:
                        description: completionTime, if set, is when the update was
                          fully applied. The update that is currently being applied
                          will have a null completion time. Completion time will always
                          be set for entries that are not the current update (usually
                          to the started time of the next update).
                        format: date-time
                        nullable: true
                        type: string
                      image:
                        description: image is a container image location that contains
                          the update. This value is always populated.
                        type: string
                      startedTime:
                        description: startedTime is the time at which the update was
                          started.
                        format: date-time
                        type: string
                      state:
                        description: state reflects whether the update was fully applied.
                          The Partial state indicates the update is not fully applied,
                          while the Completed state indicates the update was successfully
                          rolled out at least once (all parts of the update successfully
                          applied).
                        type: string
                      verified:
                        description: verified indicates whether the provided update
                          was properly verified before it was installed. If this is
                          false the cluster may not be trusted.
                        type: boolean
                      version:
                        description: version is a semantic versioning identifying
                          the update version. If the requested image does not define
                          a version, or if a failure occurs retrieving the image,
                          this value may be empty.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration reports which version of the spec
                    is being synced. If this value is not equal to metadata.generation,
                    then the desired and conditions fields may represent from a previous
                    version.
                  format: int64
                  type: integer
                versionHash:
                  description: versionHash is a fingerprint of the content that the
                    cluster will be updated with. It is used by the operator to avoid
                    unnecessary work and is for internal use only.
                  type: string
              type: object
            conditions:
              description: Conditions includes more detailed status for the cluster
                deployment
              items:
                properties:
                  lastProbeTime:
                    description: LastProbeTime is the last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human-readable message indicating details
                      about last transition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                type: object
              type: array
            federated:
              description: Federated is true if the cluster deployment has been federated
                with the host cluster.
              type: boolean
            federatedClusterRef:
              description: FederatedClusterRef is the reference to the federated cluster
                resource associated with this ClusterDeployment.
              type: object
            infraID:
              description: InfraID is an identifier for this cluster generated during
                installation and used for tagging/naming resources in cloud providers.
              type: string
            installRestarts:
              description: InstallRestarts is the total count of container restarts
                on the clusters install job.
              format: int64
              type: integer
            installed:
              description: Installed is true if the installer job has successfully
                completed for this cluster. Deprecated.
              type: boolean
            installedTimestamp:
              description: InstalledTimestamp is the time we first detected that the
                cluster has been successfully installed.
              format: date-time
              type: string
            installerImage:
              description: InstallerImage is the name of the installer image to use
                when installing the target cluster
              type: string
            provision:
              description: Provision is a reference to the last ClusterProvision created
                for the deployment
              type: object
            webConsoleURL:
              description: WebConsoleURL is the URL for the cluster's web console
                UI.
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
