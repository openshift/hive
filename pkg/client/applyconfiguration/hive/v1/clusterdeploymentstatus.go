// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	hivev1 "github.com/openshift/hive/apis/hive/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ClusterDeploymentStatusApplyConfiguration represents an declarative configuration of the ClusterDeploymentStatus type for use
// with apply.
type ClusterDeploymentStatusApplyConfiguration struct {
	InstallRestarts         *int                                           `json:"installRestarts,omitempty"`
	APIURL                  *string                                        `json:"apiURL,omitempty"`
	WebConsoleURL           *string                                        `json:"webConsoleURL,omitempty"`
	InstallerImage          *string                                        `json:"installerImage,omitempty"`
	InstallVersion          *string                                        `json:"installVersion,omitempty"`
	CLIImage                *string                                        `json:"cliImage,omitempty"`
	Conditions              []ClusterDeploymentConditionApplyConfiguration `json:"conditions,omitempty"`
	CertificateBundles      []CertificateBundleStatusApplyConfiguration    `json:"certificateBundles,omitempty"`
	InstallStartedTimestamp *metav1.Time                                   `json:"installStartedTimestamp,omitempty"`
	InstalledTimestamp      *metav1.Time                                   `json:"installedTimestamp,omitempty"`
	PowerState              *hivev1.ClusterPowerState                      `json:"powerState,omitempty"`
	ProvisionRef            *corev1.LocalObjectReference                   `json:"provisionRef,omitempty"`
	Platform                *PlatformStatusApplyConfiguration              `json:"platformStatus,omitempty"`
}

// ClusterDeploymentStatusApplyConfiguration constructs an declarative configuration of the ClusterDeploymentStatus type for use with
// apply.
func ClusterDeploymentStatus() *ClusterDeploymentStatusApplyConfiguration {
	return &ClusterDeploymentStatusApplyConfiguration{}
}

// WithInstallRestarts sets the InstallRestarts field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallRestarts field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithInstallRestarts(value int) *ClusterDeploymentStatusApplyConfiguration {
	b.InstallRestarts = &value
	return b
}

// WithAPIURL sets the APIURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIURL field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithAPIURL(value string) *ClusterDeploymentStatusApplyConfiguration {
	b.APIURL = &value
	return b
}

// WithWebConsoleURL sets the WebConsoleURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WebConsoleURL field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithWebConsoleURL(value string) *ClusterDeploymentStatusApplyConfiguration {
	b.WebConsoleURL = &value
	return b
}

// WithInstallerImage sets the InstallerImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallerImage field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithInstallerImage(value string) *ClusterDeploymentStatusApplyConfiguration {
	b.InstallerImage = &value
	return b
}

// WithInstallVersion sets the InstallVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallVersion field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithInstallVersion(value string) *ClusterDeploymentStatusApplyConfiguration {
	b.InstallVersion = &value
	return b
}

// WithCLIImage sets the CLIImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CLIImage field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithCLIImage(value string) *ClusterDeploymentStatusApplyConfiguration {
	b.CLIImage = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ClusterDeploymentStatusApplyConfiguration) WithConditions(values ...*ClusterDeploymentConditionApplyConfiguration) *ClusterDeploymentStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithCertificateBundles adds the given value to the CertificateBundles field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the CertificateBundles field.
func (b *ClusterDeploymentStatusApplyConfiguration) WithCertificateBundles(values ...*CertificateBundleStatusApplyConfiguration) *ClusterDeploymentStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithCertificateBundles")
		}
		b.CertificateBundles = append(b.CertificateBundles, *values[i])
	}
	return b
}

// WithInstallStartedTimestamp sets the InstallStartedTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallStartedTimestamp field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithInstallStartedTimestamp(value metav1.Time) *ClusterDeploymentStatusApplyConfiguration {
	b.InstallStartedTimestamp = &value
	return b
}

// WithInstalledTimestamp sets the InstalledTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstalledTimestamp field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithInstalledTimestamp(value metav1.Time) *ClusterDeploymentStatusApplyConfiguration {
	b.InstalledTimestamp = &value
	return b
}

// WithPowerState sets the PowerState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PowerState field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithPowerState(value hivev1.ClusterPowerState) *ClusterDeploymentStatusApplyConfiguration {
	b.PowerState = &value
	return b
}

// WithProvisionRef sets the ProvisionRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProvisionRef field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithProvisionRef(value corev1.LocalObjectReference) *ClusterDeploymentStatusApplyConfiguration {
	b.ProvisionRef = &value
	return b
}

// WithPlatform sets the Platform field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Platform field is set to the value of the last call.
func (b *ClusterDeploymentStatusApplyConfiguration) WithPlatform(value *PlatformStatusApplyConfiguration) *ClusterDeploymentStatusApplyConfiguration {
	b.Platform = value
	return b
}
