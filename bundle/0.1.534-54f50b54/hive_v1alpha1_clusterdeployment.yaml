apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: clusterdeployments.hive.openshift.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.baseDomain
    name: BaseDomain
    type: string
  - JSONPath: .status.installed
    name: Installed
    type: boolean
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: hive.openshift.io
  names:
    kind: ClusterDeployment
    plural: clusterdeployments
    shortNames:
    - cd
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            baseDomain:
              description: BaseDomain is the base domain to which the cluster should
                belong.
              type: string
            clusterName:
              description: ClusterName is the friendly name of the cluster. It is
                used for subdomains, some resource tagging, and other instances where
                a friendly name for the cluster is useful.
              type: string
            compute:
              description: Compute is the list of MachinePools containing compute
                nodes that need to be installed.
              items:
                properties:
                  labels:
                    description: Map of label string keys and values that will be
                      applied to the created MachineSet's MachineSpec. This list will
                      overwrite any modifications made to Node labels on an ongoing
                      basis.
                    type: object
                  name:
                    description: Name is the name of the machine pool.
                    type: string
                  platform:
                    description: Platform is configuration for machine pool specific
                      to the platfrom.
                    properties:
                      aws:
                        description: AWS is the configuration used when installing
                          on AWS.
                        properties:
                          rootVolume:
                            description: EC2RootVolume defines the storage for ec2
                              instance.
                            properties:
                              iops:
                                description: IOPS defines the iops for the instance.
                                format: int64
                                type: integer
                              size:
                                description: Size defines the size of the instance.
                                format: int64
                                type: integer
                              type:
                                description: Type defines the type of the instance.
                                type: string
                            required:
                            - iops
                            - size
                            - type
                            type: object
                          type:
                            description: InstanceType defines the ec2 instance type.
                              eg. m4-large
                            type: string
                          zones:
                            description: Zones is list of availability zones that
                              can be used.
                            items:
                              type: string
                            type: array
                        required:
                        - type
                        - rootVolume
                        type: object
                      libvirt:
                        description: Libvirt is the configuration used when installing
                          on libvirt.
                        properties:
                          image:
                            description: Image is the URL to the OS image. E.g. "http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz"
                            type: string
                          imagePool:
                            description: ImagePool is the name of the libvirt storage
                              pool to which the storage volume containing the OS image
                              belongs.
                            type: string
                          imageVolume:
                            description: ImageVolume is the name of the libvirt storage
                              volume containing the OS image.
                            type: string
                        required:
                        - image
                        type: object
                      openstack:
                        description: OpenStack is the configuration used when installing
                          on OpenStack.
                        properties:
                          rootVolume:
                            description: OpenStackRootVolume defines the storage for
                              Nova instance.
                            properties:
                              iops:
                                description: IOPS defines the iops for the instance.
                                format: int64
                                type: integer
                              size:
                                description: Size defines the size of the instance.
                                format: int64
                                type: integer
                              type:
                                description: Type defines the type of the instance.
                                type: string
                            required:
                            - iops
                            - size
                            - type
                            type: object
                          type:
                            description: FlavorName defines the OpenStack Nova flavor.
                              eg. m1.large
                            type: string
                        required:
                        - type
                        - rootVolume
                        type: object
                    type: object
                  replicas:
                    description: Replicas is the count of machines for this machine
                      pool. Default is 1.
                    format: int64
                    type: integer
                  taints:
                    description: List of taints that will be applied to the created
                      MachineSet's MachineSpec. This list will overwrite any modifications
                      made to Node taints on an ongoing basis.
                    items:
                      type: object
                    type: array
                required:
                - name
                - replicas
                - platform
                type: object
              type: array
            controlPlane:
              description: ControlPlane is the MachinePool containing control plane
                nodes that need to be installed.
              properties:
                labels:
                  description: Map of label string keys and values that will be applied
                    to the created MachineSet's MachineSpec. This list will overwrite
                    any modifications made to Node labels on an ongoing basis.
                  type: object
                name:
                  description: Name is the name of the machine pool.
                  type: string
                platform:
                  description: Platform is configuration for machine pool specific
                    to the platfrom.
                  properties:
                    aws:
                      description: AWS is the configuration used when installing on
                        AWS.
                      properties:
                        rootVolume:
                          description: EC2RootVolume defines the storage for ec2 instance.
                          properties:
                            iops:
                              description: IOPS defines the iops for the instance.
                              format: int64
                              type: integer
                            size:
                              description: Size defines the size of the instance.
                              format: int64
                              type: integer
                            type:
                              description: Type defines the type of the instance.
                              type: string
                          required:
                          - iops
                          - size
                          - type
                          type: object
                        type:
                          description: InstanceType defines the ec2 instance type.
                            eg. m4-large
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      required:
                      - type
                      - rootVolume
                      type: object
                    libvirt:
                      description: Libvirt is the configuration used when installing
                        on libvirt.
                      properties:
                        image:
                          description: Image is the URL to the OS image. E.g. "http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz"
                          type: string
                        imagePool:
                          description: ImagePool is the name of the libvirt storage
                            pool to which the storage volume containing the OS image
                            belongs.
                          type: string
                        imageVolume:
                          description: ImageVolume is the name of the libvirt storage
                            volume containing the OS image.
                          type: string
                      required:
                      - image
                      type: object
                    openstack:
                      description: OpenStack is the configuration used when installing
                        on OpenStack.
                      properties:
                        rootVolume:
                          description: OpenStackRootVolume defines the storage for
                            Nova instance.
                          properties:
                            iops:
                              description: IOPS defines the iops for the instance.
                              format: int64
                              type: integer
                            size:
                              description: Size defines the size of the instance.
                              format: int64
                              type: integer
                            type:
                              description: Type defines the type of the instance.
                              type: string
                          required:
                          - iops
                          - size
                          - type
                          type: object
                        type:
                          description: FlavorName defines the OpenStack Nova flavor.
                            eg. m1.large
                          type: string
                      required:
                      - type
                      - rootVolume
                      type: object
                  type: object
                replicas:
                  description: Replicas is the count of machines for this machine
                    pool. Default is 1.
                  format: int64
                  type: integer
                taints:
                  description: List of taints that will be applied to the created
                    MachineSet's MachineSpec. This list will overwrite any modifications
                    made to Node taints on an ongoing basis.
                  items:
                    type: object
                  type: array
              required:
              - name
              - replicas
              - platform
              type: object
            imageSet:
              description: ImageSet is a reference to a ClusterImageSet. If values
                are specified for Images, those will take precedence over the ones
                from the ClusterImageSet.
              properties:
                name:
                  description: Name is the name of the ClusterImageSet that this refers
                    to
                  type: string
              required:
              - name
              type: object
            images:
              description: Images allows overriding the default images used to provision
                and manage the cluster.
              properties:
                hiveImage:
                  description: HiveImage is the image used in the sidecar container
                    to manage execution of openshift-install.
                  type: string
                hiveImagePullPolicy:
                  description: HiveImagePullPolicy is the pull policy for the installer
                    image.
                  type: string
                installerImage:
                  description: InstallerImage is the image containing the openshift-install
                    binary that will be used to install.
                  type: string
                installerImagePullPolicy:
                  description: InstallerImagePullPolicy is the pull policy for the
                    installer image.
                  type: string
                releaseImage:
                  description: ReleaseImage is the image containing metadata for all
                    components that run in the cluster, and is the primary and best
                    way to specify what specific version of OpenShift you wish to
                    install.
                  type: string
              type: object
            networking:
              description: Networking defines the pod network provider in the cluster.
              properties:
                clusterNetworks:
                  description: ClusterNetworks is the IP address space from which
                    to assign pod IPs.
                  items:
                    properties:
                      cidr:
                        type: string
                      hostSubnetLength:
                        format: int32
                        type: integer
                    required:
                    - cidr
                    - hostSubnetLength
                    type: object
                  type: array
                machineCIDR:
                  description: MachineCIDR is the IP address space from which to assign
                    machine IPs.
                  type: string
                serviceCIDR:
                  description: ServiceCIDR is the IP address space from which to assign
                    service IPs.
                  type: string
                type:
                  description: Type is the network type to install
                  type: string
              required:
              - machineCIDR
              - type
              - serviceCIDR
              type: object
            platform:
              description: Platform is the configuration for the specific platform
                upon which to perform the installation.
              properties:
                aws:
                  description: AWS is the configuration used when installing on AWS.
                  properties:
                    defaultMachinePlatform:
                      description: DefaultMachinePlatform is the default configuration
                        used when installing on AWS for machine pools which do not
                        define their own platform configuration.
                      properties:
                        rootVolume:
                          description: EC2RootVolume defines the storage for ec2 instance.
                          properties:
                            iops:
                              description: IOPS defines the iops for the instance.
                              format: int64
                              type: integer
                            size:
                              description: Size defines the size of the instance.
                              format: int64
                              type: integer
                            type:
                              description: Type defines the type of the instance.
                              type: string
                          required:
                          - iops
                          - size
                          - type
                          type: object
                        type:
                          description: InstanceType defines the ec2 instance type.
                            eg. m4-large
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      required:
                      - type
                      - rootVolume
                      type: object
                    region:
                      description: Region specifies the AWS region where the cluster
                        will be created.
                      type: string
                    userTags:
                      description: UserTags specifies additional tags for AWS resources
                        created for the cluster.
                      type: object
                  required:
                  - region
                  type: object
                libvirt:
                  description: Libvirt is the configuration used when installing on
                    libvirt.
                  properties:
                    URI:
                      description: URI is the identifier for the libvirtd connection.  It
                        must be reachable from both the host (where the installer
                        is run) and the cluster (where the cluster-API controller
                        pod will be running).
                      type: string
                    defaultMachinePlatform:
                      description: DefaultMachinePlatform is the default configuration
                        used when installing on AWS for machine pools which do not
                        define their own platform configuration.
                      properties:
                        image:
                          description: Image is the URL to the OS image. E.g. "http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz"
                          type: string
                        imagePool:
                          description: ImagePool is the name of the libvirt storage
                            pool to which the storage volume containing the OS image
                            belongs.
                          type: string
                        imageVolume:
                          description: ImageVolume is the name of the libvirt storage
                            volume containing the OS image.
                          type: string
                      required:
                      - image
                      type: object
                    masterIPs:
                      description: MasterIPs
                      items:
                        format: byte
                        type: string
                      type: array
                    network:
                      description: Network
                      properties:
                        if:
                          description: IfName is the name of the network interface.
                          type: string
                        ipRange:
                          description: IPRange is the range of IPs to use.
                          type: string
                        name:
                          description: Name is the name of the nework.
                          type: string
                      required:
                      - name
                      - if
                      - ipRange
                      type: object
                  required:
                  - URI
                  - network
                  - masterIPs
                  type: object
              type: object
            platformSecrets:
              description: PlatformSecrets contains credentials and secrets for the
                cluster infrastructure.
              properties:
                aws:
                  properties:
                    credentials:
                      description: Credentials refers to a secret that contains the
                        AWS account access credentials.
                      type: object
                  required:
                  - credentials
                  type: object
              type: object
            preserveOnDelete:
              description: PreserveOnDelete allows the user to disconnect a cluster
                from Hive without deprovisioning it
              type: boolean
            pullSecret:
              description: PullSecret is the reference to the secret to use when pulling
                images.
              type: object
            sshKey:
              description: SSHKey is the reference to the secret that contains a public
                key to use for access to compute instances.
              type: object
          required:
          - clusterName
          - baseDomain
          - networking
          - controlPlane
          - compute
          - platform
          - pullSecret
          - platformSecrets
          type: object
        status:
          properties:
            adminKubeconfigSecret:
              description: AdminKubeconfigSecret references the secret containing
                the admin kubeconfig for this cluster.
              type: object
            adminPasswordSecret:
              description: AdminPasswordSecret references the secret containing the
                admin username/password which can be used to login to this cluster.
              type: object
            apiURL:
              description: APIURL is the URL where the cluster's API can be accessed.
              type: string
            clusterID:
              description: ClusterID is a globally unique identifier for this cluster
                generated during installation. Used for reporting metrics among other
                places.
              type: string
            clusterVersionStatus:
              description: ClusterVersionStatus will hold a copy of the remote cluster's
                ClusterVersion.Status
              properties:
                availableUpdates:
                  description: availableUpdates contains the list of updates that
                    are appropriate for this cluster. This list may be empty if no
                    updates are recommended, if the update service is unavailable,
                    or if an invalid channel has been specified. +nullable
                  items:
                    properties:
                      image:
                        description: image is a container image location that contains
                          the update. When this field is part of spec, image is optional
                          if version is specified and the availableUpdates field contains
                          a matching version.
                        type: string
                      version:
                        description: version is a semantic versioning identifying
                          the update version. When this field is part of spec, version
                          is optional if image is specified.
                        type: string
                    type: object
                  type: array
                conditions:
                  description: conditions provides information about the cluster version.
                    The condition "Available" is set to true if the desiredUpdate
                    has been reached. The condition "Progressing" is set to true if
                    an update is being applied. The condition "Failing" is set to
                    true if an update is currently blocked by a temporary or permanent
                    error. Conditions are only valid for the current desiredUpdate
                    when metadata.generation is equal to status.generation.
                  items:
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status object.
                        format: date-time
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the reason for the condition's last
                          transition.  Reasons are CamelCase
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the state of the operator's reconciliation
                          functionality.
                        type: string
                    required:
                    - type
                    - status
                    - lastTransitionTime
                    type: object
                  type: array
                desired:
                  description: desired is the version that the cluster is reconciling
                    towards. If the cluster is not yet fully initialized desired will
                    be set with the information available, which may be an image or
                    a tag.
                  properties:
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                  type: object
                history:
                  description: history contains a list of the most recent versions
                    applied to the cluster. This value may be empty during cluster
                    startup, and then will be updated when a new update is being applied.
                    The newest update is first in the list and it is ordered by recency.
                    Updates in the history have state Completed if the rollout completed
                    - if an update was failing or halfway applied the state will be
                    Partial. Only a limited amount of update history is preserved.
                  items:
                    properties:
                      completionTime:
                        description: completionTime, if set, is when the update was
                          fully applied. The update that is currently being applied
                          will have a null completion time. Completion time will always
                          be set for entries that are not the current update (usually
                          to the started time of the next update). +nullable
                        format: date-time
                        type: string
                      image:
                        description: image is a container image location that contains
                          the update. This value is always populated.
                        type: string
                      startedTime:
                        description: startedTime is the time at which the update was
                          started.
                        format: date-time
                        type: string
                      state:
                        description: state reflects whether the update was fully applied.
                          The Partial state indicates the update is not fully applied,
                          while the Completed state indicates the update was successfully
                          rolled out at least once (all parts of the update successfully
                          applied).
                        type: string
                      version:
                        description: version is a semantic versioning identifying
                          the update version. If the requested image does not define
                          a version, or if a failure occurs retrieving the image,
                          this value may be empty.
                        type: string
                    required:
                    - state
                    - startedTime
                    - completionTime
                    - image
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration reports which version of the spec
                    is being synced. If this value is not equal to metadata.generation,
                    then the desired and conditions fields may represent from a previous
                    version.
                  format: int64
                  type: integer
                versionHash:
                  description: versionHash is a fingerprint of the content that the
                    cluster will be updated with. It is used by the operator to avoid
                    unnecessary work and is for internal use only.
                  type: string
              required:
              - desired
              - observedGeneration
              - versionHash
              - availableUpdates
              type: object
            conditions:
              description: Conditions includes more detailed status for the cluster
                deployment
              items:
                properties:
                  lastProbeTime:
                    description: LastProbeTime is the last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human-readable message indicating details
                      about last transition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            federated:
              description: Federated is true if the cluster deployment has been federated
                with the host cluster.
              type: boolean
            federatedClusterRef:
              description: FederatedClusterRef is the reference to the federated cluster
                resource associated with this ClusterDeployment.
              type: object
            infraID:
              description: InfraID is an identifier for this cluster generated during
                installation and used for tagging/naming resources in cloud providers.
              type: string
            installed:
              description: Installed is true if the installer job has successfully
                completed for this cluster.
              type: boolean
            installerImage:
              description: InstallerImage is the name of the installer image to use
                when installing the target cluster
              type: string
            selectorSyncSetStatus:
              description: SelectorSyncSetStatus is the list of status for SelectorSyncSets
                which apply to the cluster deployment.
              items:
                properties:
                  conditions:
                    description: Conditions is the list of SyncConditions used to
                      indicate UnknownObject when a resource type cannot be determined
                      from a SyncSet resource.
                    items:
                      properties:
                        lastProbeTime:
                          description: LastProbeTime is the last time we probed the
                            condition.
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition
                            transitioned from one status to another.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human-readable message indicating
                            details about last transition.
                          type: string
                        reason:
                          description: Reason is a unique, one-word, CamelCase reason
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status is the status of the condition.
                          type: string
                        type:
                          description: Type is the type of the condition.
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  name:
                    description: Name is the name of the SyncSet.
                    type: string
                  patches:
                    description: Patches is the list of SyncStatus for patches that
                      have been applied.
                    items:
                      properties:
                        apiVersion:
                          description: APIVersion is the Group and Version of the
                            object that was synced or patched.
                          type: string
                        conditions:
                          description: Conditions is the list of conditions indicating
                            success or failure of object create, update and delete
                            as well as patch application.
                          items:
                            properties:
                              lastProbeTime:
                                description: LastProbeTime is the last time we probed
                                  the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Message is a human-readable message indicating
                                  details about last transition.
                                type: string
                              reason:
                                description: Reason is a unique, one-word, CamelCase
                                  reason for the condition's last transition.
                                type: string
                              status:
                                description: Status is the status of the condition.
                                type: string
                              type:
                                description: Type is the type of the condition.
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        hash:
                          description: Hash is the unique md5 hash of the resource
                            or patch.
                          format: byte
                          type: string
                        kind:
                          description: Kind is the Kind of the object that was synced
                            or patched.
                          type: string
                        name:
                          description: Name is the name of the object that was synced
                            or patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace of the object that
                            was synced or patched.
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      - hash
                      - conditions
                      type: object
                    type: array
                  resources:
                    description: Resources is the list of SyncStatus for objects that
                      have been synced.
                    items:
                      properties:
                        apiVersion:
                          description: APIVersion is the Group and Version of the
                            object that was synced or patched.
                          type: string
                        conditions:
                          description: Conditions is the list of conditions indicating
                            success or failure of object create, update and delete
                            as well as patch application.
                          items:
                            properties:
                              lastProbeTime:
                                description: LastProbeTime is the last time we probed
                                  the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Message is a human-readable message indicating
                                  details about last transition.
                                type: string
                              reason:
                                description: Reason is a unique, one-word, CamelCase
                                  reason for the condition's last transition.
                                type: string
                              status:
                                description: Status is the status of the condition.
                                type: string
                              type:
                                description: Type is the type of the condition.
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        hash:
                          description: Hash is the unique md5 hash of the resource
                            or patch.
                          format: byte
                          type: string
                        kind:
                          description: Kind is the Kind of the object that was synced
                            or patched.
                          type: string
                        name:
                          description: Name is the name of the object that was synced
                            or patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace of the object that
                            was synced or patched.
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      - hash
                      - conditions
                      type: object
                    type: array
                required:
                - name
                type: object
              type: array
            syncSetStatus:
              description: SyncSetStatus is the list of status for SyncSets which
                apply to the cluster deployment.
              items:
                properties:
                  conditions:
                    description: Conditions is the list of SyncConditions used to
                      indicate UnknownObject when a resource type cannot be determined
                      from a SyncSet resource.
                    items:
                      properties:
                        lastProbeTime:
                          description: LastProbeTime is the last time we probed the
                            condition.
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition
                            transitioned from one status to another.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human-readable message indicating
                            details about last transition.
                          type: string
                        reason:
                          description: Reason is a unique, one-word, CamelCase reason
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status is the status of the condition.
                          type: string
                        type:
                          description: Type is the type of the condition.
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  name:
                    description: Name is the name of the SyncSet.
                    type: string
                  patches:
                    description: Patches is the list of SyncStatus for patches that
                      have been applied.
                    items:
                      properties:
                        apiVersion:
                          description: APIVersion is the Group and Version of the
                            object that was synced or patched.
                          type: string
                        conditions:
                          description: Conditions is the list of conditions indicating
                            success or failure of object create, update and delete
                            as well as patch application.
                          items:
                            properties:
                              lastProbeTime:
                                description: LastProbeTime is the last time we probed
                                  the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Message is a human-readable message indicating
                                  details about last transition.
                                type: string
                              reason:
                                description: Reason is a unique, one-word, CamelCase
                                  reason for the condition's last transition.
                                type: string
                              status:
                                description: Status is the status of the condition.
                                type: string
                              type:
                                description: Type is the type of the condition.
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        hash:
                          description: Hash is the unique md5 hash of the resource
                            or patch.
                          format: byte
                          type: string
                        kind:
                          description: Kind is the Kind of the object that was synced
                            or patched.
                          type: string
                        name:
                          description: Name is the name of the object that was synced
                            or patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace of the object that
                            was synced or patched.
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      - hash
                      - conditions
                      type: object
                    type: array
                  resources:
                    description: Resources is the list of SyncStatus for objects that
                      have been synced.
                    items:
                      properties:
                        apiVersion:
                          description: APIVersion is the Group and Version of the
                            object that was synced or patched.
                          type: string
                        conditions:
                          description: Conditions is the list of conditions indicating
                            success or failure of object create, update and delete
                            as well as patch application.
                          items:
                            properties:
                              lastProbeTime:
                                description: LastProbeTime is the last time we probed
                                  the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Message is a human-readable message indicating
                                  details about last transition.
                                type: string
                              reason:
                                description: Reason is a unique, one-word, CamelCase
                                  reason for the condition's last transition.
                                type: string
                              status:
                                description: Status is the status of the condition.
                                type: string
                              type:
                                description: Type is the type of the condition.
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        hash:
                          description: Hash is the unique md5 hash of the resource
                            or patch.
                          format: byte
                          type: string
                        kind:
                          description: Kind is the Kind of the object that was synced
                            or patched.
                          type: string
                        name:
                          description: Name is the name of the object that was synced
                            or patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace of the object that
                            was synced or patched.
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      - hash
                      - conditions
                      type: object
                    type: array
                required:
                - name
                type: object
              type: array
            webConsoleURL:
              description: WebConsoleURL is the URL for the cluster's web console
                UI.
              type: string
          required:
          - installed
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
