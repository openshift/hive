// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// SyncObjectPatchApplyConfiguration represents an declarative configuration of the SyncObjectPatch type for use
// with apply.
type SyncObjectPatchApplyConfiguration struct {
	APIVersion *string `json:"apiVersion,omitempty"`
	Kind       *string `json:"kind,omitempty"`
	Name       *string `json:"name,omitempty"`
	Namespace  *string `json:"namespace,omitempty"`
	Patch      *string `json:"patch,omitempty"`
	PatchType  *string `json:"patchType,omitempty"`
}

// SyncObjectPatchApplyConfiguration constructs an declarative configuration of the SyncObjectPatch type for use with
// apply.
func SyncObjectPatch() *SyncObjectPatchApplyConfiguration {
	return &SyncObjectPatchApplyConfiguration{}
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *SyncObjectPatchApplyConfiguration) WithAPIVersion(value string) *SyncObjectPatchApplyConfiguration {
	b.APIVersion = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *SyncObjectPatchApplyConfiguration) WithKind(value string) *SyncObjectPatchApplyConfiguration {
	b.Kind = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *SyncObjectPatchApplyConfiguration) WithName(value string) *SyncObjectPatchApplyConfiguration {
	b.Name = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *SyncObjectPatchApplyConfiguration) WithNamespace(value string) *SyncObjectPatchApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithPatch sets the Patch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Patch field is set to the value of the last call.
func (b *SyncObjectPatchApplyConfiguration) WithPatch(value string) *SyncObjectPatchApplyConfiguration {
	b.Patch = &value
	return b
}

// WithPatchType sets the PatchType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PatchType field is set to the value of the last call.
func (b *SyncObjectPatchApplyConfiguration) WithPatchType(value string) *SyncObjectPatchApplyConfiguration {
	b.PatchType = &value
	return b
}
