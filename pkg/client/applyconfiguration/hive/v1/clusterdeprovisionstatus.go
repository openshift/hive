// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ClusterDeprovisionStatusApplyConfiguration represents an declarative configuration of the ClusterDeprovisionStatus type for use
// with apply.
type ClusterDeprovisionStatusApplyConfiguration struct {
	Completed  *bool                                           `json:"completed,omitempty"`
	Conditions []ClusterDeprovisionConditionApplyConfiguration `json:"conditions,omitempty"`
}

// ClusterDeprovisionStatusApplyConfiguration constructs an declarative configuration of the ClusterDeprovisionStatus type for use with
// apply.
func ClusterDeprovisionStatus() *ClusterDeprovisionStatusApplyConfiguration {
	return &ClusterDeprovisionStatusApplyConfiguration{}
}

// WithCompleted sets the Completed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Completed field is set to the value of the last call.
func (b *ClusterDeprovisionStatusApplyConfiguration) WithCompleted(value bool) *ClusterDeprovisionStatusApplyConfiguration {
	b.Completed = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ClusterDeprovisionStatusApplyConfiguration) WithConditions(values ...*ClusterDeprovisionConditionApplyConfiguration) *ClusterDeprovisionStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}
