apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: machinepools.hive.openshift.io
spec:
  group: hive.openshift.io
  names:
    kind: MachinePool
    listKind: MachinePoolList
    plural: machinepools
    singular: machinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: PoolName
      type: string
    - jsonPath: .spec.clusterDeploymentRef.name
      name: ClusterDeployment
      type: string
    - jsonPath: .spec.replicas
      name: Replicas
      type: integer
    name: v1
    schema:
      openAPIV3Schema:
        description: MachinePool is the Schema for the machinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachinePoolSpec defines the desired state of MachinePool
            properties:
              autoscaling:
                description: Autoscaling is the details for auto-scaling the machine
                  pool. Replicas and autoscaling cannot be used together.
                properties:
                  maxReplicas:
                    description: MaxReplicas is the maximum number of replicas for
                      the machine pool.
                    format: int32
                    type: integer
                  minReplicas:
                    description: MinReplicas is the minimum number of replicas for
                      the machine pool.
                    format: int32
                    type: integer
                required:
                - maxReplicas
                - minReplicas
                type: object
              clusterDeploymentRef:
                description: ClusterDeploymentRef references the cluster deployment
                  to which this machine pool belongs.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              labels:
                additionalProperties:
                  type: string
                description: Map of label string keys and values that will be applied
                  to the created MachineSet's MachineSpec. This list will overwrite
                  any modifications made to Node labels on an ongoing basis.
                type: object
              name:
                description: Name is the name of the machine pool.
                type: string
              platform:
                description: Platform is configuration for machine pool specific to
                  the platform.
                properties:
                  alibabacloud:
                    description: AlibabaCloud is the configuration used when installing
                      on Alibaba Cloud.
                    properties:
                      imageID:
                        description: ImageID is the Image ID that should be used to
                          create ECS instance. If set, the ImageID should belong to
                          the same region as the cluster.
                        type: string
                      instanceType:
                        description: InstanceType defines the ECS instance type. eg.
                          ecs.g6.large
                        type: string
                      systemDiskCategory:
                        description: SystemDiskCategory defines the category of the
                          system disk.
                        enum:
                        - ""
                        - cloud_efficiency
                        - cloud_essd
                        type: string
                      systemDiskSize:
                        description: SystemDiskSize defines the size of the system
                          disk in gibibytes (GiB).
                        minimum: 120
                        type: integer
                      zones:
                        description: Zones is list of availability zones that can
                          be used. eg. ["cn-hangzhou-i", "cn-hangzhou-h", "cn-hangzhou-j"]
                        items:
                          type: string
                        type: array
                    type: object
                  aws:
                    description: AWS is the configuration used when installing on
                      AWS.
                    properties:
                      additionalSecurityGroupIDs:
                        description: AdditionalSecurityGroupIDs contains IDs of additional
                          security groups for machines, where each ID is presented
                          in the format sg-xxxx.
                        items:
                          type: string
                        type: array
                      metadataService:
                        description: EC2MetadataOptions defines metadata service interaction
                          options for EC2 instances in the machine pool.
                        properties:
                          authentication:
                            description: Authentication determines whether or not
                              the host requires the use of authentication when interacting
                              with the metadata service. When using authentication,
                              this enforces v2 interaction method (IMDSv2) with the
                              metadata service. When omitted, this means the user
                              has no opinion and the value is left to the platform
                              to choose a good default, which is subject to change
                              over time. The current default is optional. At this
                              point this field represents `HttpTokens` parameter from
                              `InstanceMetadataOptionsRequest` structure in AWS EC2
                              API https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_InstanceMetadataOptionsRequest.html
                            type: string
                        type: object
                      rootVolume:
                        description: EC2RootVolume defines the storage for ec2 instance.
                        properties:
                          iops:
                            description: IOPS defines the iops for the storage.
                            type: integer
                          kmsKeyARN:
                            description: The KMS key that will be used to encrypt
                              the EBS volume. If no key is provided the default KMS
                              key for the account will be used. https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html
                            type: string
                          size:
                            description: Size defines the size of the storage.
                            type: integer
                          type:
                            description: Type defines the type of the storage.
                            type: string
                        required:
                        - size
                        - type
                        type: object
                      spotMarketOptions:
                        description: SpotMarketOptions allows users to configure instances
                          to be run using AWS Spot instances.
                        properties:
                          maxPrice:
                            description: 'The maximum price the user is willing to
                              pay for their instances Default: On-Demand price'
                            type: string
                        type: object
                      subnets:
                        description: Subnets is the list of IDs of subnets to which
                          to attach the machines. There must be exactly one subnet
                          for each availability zone used. These subnets may be public
                          or private. As a special case, for consistency with install-config,
                          you may specify exactly one private and one public subnet
                          for each availability zone. In this case, the public subnets
                          will be filtered out and only the private subnets will be
                          used. If empty/omitted, we will look for subnets in each
                          availability zone tagged with Name=<clusterID>-private-<az>.
                        items:
                          type: string
                        type: array
                      type:
                        description: InstanceType defines the ec2 instance type. eg.
                          m4-large
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used.
                        items:
                          type: string
                        type: array
                    required:
                    - rootVolume
                    - type
                    type: object
                  azure:
                    description: Azure is the configuration used when installing on
                      Azure.
                    properties:
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSet defines a disk encryption
                              set.
                            properties:
                              name:
                                description: Name is the name of the disk encryption
                                  set.
                                type: string
                              resourceGroup:
                                description: ResourceGroup defines the Azure resource
                                  group used by the disk encryption set.
                                type: string
                              subscriptionId:
                                description: SubscriptionID defines the Azure subscription
                                  the disk encryption set is in.
                                type: string
                            required:
                            - name
                            - resourceGroup
                            type: object
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int32
                            minimum: 0
                            type: integer
                          diskType:
                            description: DiskType defines the type of disk. For control
                              plane nodes, the valid values are Premium_LRS and StandardSSD_LRS.
                              Default is Premium_LRS.
                            enum:
                            - Standard_LRS
                            - Premium_LRS
                            - StandardSSD_LRS
                            type: string
                        required:
                        - diskSizeGB
                        type: object
                      osImage:
                        description: OSImage defines the image to use for the OS.
                        properties:
                          offer:
                            description: Offer is the offer of the image.
                            type: string
                          publisher:
                            description: Publisher is the publisher of the image.
                            type: string
                          sku:
                            description: SKU is the SKU of the image.
                            type: string
                          version:
                            description: Version is the version of the image.
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      type:
                        description: InstanceType defines the azure instance type.
                          eg. Standard_DS_V2
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used. eg. ["1", "2", "3"]
                        items:
                          type: string
                        type: array
                    required:
                    - osDisk
                    - type
                    type: object
                  gcp:
                    description: GCP is the configuration used when installing on
                      GCP.
                    properties:
                      osDisk:
                        description: OSDisk defines the storage for instances.
                        properties:
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                              Defaulted internally to 128.
                            format: int64
                            maximum: 65536
                            minimum: 16
                            type: integer
                          diskType:
                            description: DiskType defines the type of disk. The valid
                              values are pd-standard and pd-ssd. Defaulted internally
                              to pd-ssd.
                            enum:
                            - pd-ssd
                            - pd-standard
                            type: string
                          encryptionKey:
                            description: EncryptionKey defines the KMS key to be used
                              to encrypt the disk.
                            properties:
                              kmsKey:
                                description: KMSKey is a reference to a KMS Key to
                                  use for the encryption.
                                properties:
                                  keyRing:
                                    description: KeyRing is the name of the KMS Key
                                      Ring which the KMS Key belongs to.
                                    type: string
                                  location:
                                    description: Location is the GCP location in which
                                      the Key Ring exists.
                                    type: string
                                  name:
                                    description: Name is the name of the customer
                                      managed encryption key to be used for the disk
                                      encryption.
                                    type: string
                                  projectID:
                                    description: ProjectID is the ID of the Project
                                      in which the KMS Key Ring exists. Defaults to
                                      the VM ProjectID if not set.
                                    type: string
                                required:
                                - keyRing
                                - location
                                - name
                                type: object
                              kmsKeyServiceAccount:
                                description: KMSKeyServiceAccount is the service account
                                  being used for the encryption request for the given
                                  KMS key. If absent, the Compute Engine default service
                                  account is used. See https://cloud.google.com/compute/docs/access/service-accounts#compute_engine_service_account
                                  for details on the default service account.
                                type: string
                            type: object
                        type: object
                      type:
                        description: InstanceType defines the GCP instance type. eg.
                          n1-standard-4
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used.
                        items:
                          type: string
                        type: array
                    required:
                    - type
                    type: object
                  ibmcloud:
                    description: IBMCloud is the configuration used when installing
                      on IBM Cloud.
                    properties:
                      bootVolume:
                        description: BootVolume is the configuration for the machine's
                          boot volume.
                        properties:
                          encryptionKey:
                            description: EncryptionKey is the CRN referencing a Key
                              Protect or Hyper Protect Crypto Services key to use
                              for volume encryption. If not specified, a provider
                              managed encryption key will be used.
                            type: string
                        type: object
                      dedicatedHosts:
                        description: DedicatedHosts is the configuration for the machine's
                          dedicated host and profile.
                        items:
                          description: DedicatedHost stores the configuration for
                            the machine's dedicated host platform.
                          properties:
                            name:
                              description: Name is the name of the dedicated host
                                to provision the machine on. If specified, machines
                                will be created on pre-existing dedicated host.
                              type: string
                            profile:
                              description: Profile is the profile ID for the dedicated
                                host. If specified, new dedicated host will be created
                                for machines.
                              type: string
                          type: object
                        type: array
                      type:
                        description: InstanceType is the VSI machine profile.
                        type: string
                      zones:
                        description: Zones is the list of availability zones used
                          for machines in the pool.
                        items:
                          type: string
                        type: array
                    type: object
                  openstack:
                    description: OpenStack is the configuration used when installing
                      on OpenStack.
                    properties:
                      flavor:
                        description: Flavor defines the OpenStack Nova flavor. eg.
                          m1.large The json key here differs from the installer which
                          uses both "computeFlavor" and type "type" depending on which
                          type you're looking at, and the resulting field on the MachineSet
                          is "flavor". We are opting to stay consistent with the end
                          result.
                        type: string
                      rootVolume:
                        description: RootVolume defines the root volume for instances
                          in the machine pool. The instances use ephemeral disks if
                          not set.
                        properties:
                          size:
                            description: Size defines the size of the volume in gibibytes
                              (GiB). Required
                            type: integer
                          type:
                            description: Type defines the type of the volume. Required
                            type: string
                        required:
                        - size
                        - type
                        type: object
                    required:
                    - flavor
                    type: object
                  ovirt:
                    description: Ovirt is the configuration used when installing on
                      oVirt.
                    properties:
                      cpu:
                        description: CPU defines the VM CPU.
                        properties:
                          cores:
                            description: Cores is the number of cores per socket.
                              Total CPUs is (Sockets * Cores)
                            format: int32
                            type: integer
                          sockets:
                            description: Sockets is the number of sockets for a VM.
                              Total CPUs is (Sockets * Cores)
                            format: int32
                            type: integer
                        required:
                        - cores
                        - sockets
                        type: object
                      memoryMB:
                        description: MemoryMB is the size of a VM's memory in MiBs.
                        format: int32
                        type: integer
                      osDisk:
                        description: OSDisk is the the root disk of the node.
                        properties:
                          sizeGB:
                            description: SizeGB size of the bootable disk in GiB.
                            format: int64
                            type: integer
                        required:
                        - sizeGB
                        type: object
                      vmType:
                        description: VMType defines the workload type of the VM.
                        enum:
                        - ""
                        - desktop
                        - server
                        - high_performance
                        type: string
                    type: object
                  vsphere:
                    description: VSphere is the configuration used when installing
                      on vSphere
                    properties:
                      coresPerSocket:
                        description: NumCoresPerSocket is the number of cores per
                          socket in a vm. The number of vCPUs on the vm will be NumCPUs/NumCoresPerSocket.
                        format: int32
                        type: integer
                      cpus:
                        description: NumCPUs is the total number of virtual processor
                          cores to assign a vm.
                        format: int32
                        type: integer
                      memoryMB:
                        description: Memory is the size of a VM's memory in MB.
                        format: int64
                        type: integer
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int32
                            type: integer
                        required:
                        - diskSizeGB
                        type: object
                    required:
                    - coresPerSocket
                    - cpus
                    - memoryMB
                    - osDisk
                    type: object
                type: object
              replicas:
                description: Replicas is the count of machines for this machine pool.
                  Replicas and autoscaling cannot be used together. Default is 1,
                  if autoscaling is not used.
                format: int64
                type: integer
              taints:
                description: List of taints that will be applied to the created MachineSet's
                  MachineSpec. This list will overwrite any modifications made to
                  Node taints on an ongoing basis. In case of duplicate entries, first
                  encountered taint Value will be preserved, and the rest collapsed
                  on the corresponding MachineSets. Note that taints are uniquely
                  identified based on key+effect, not just key.
                items:
                  description: The node this Taint is attached to has the "effect"
                    on any pod that does not tolerate the Taint.
                  properties:
                    effect:
                      description: Required. The effect of the taint on pods that
                        do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule
                        and NoExecute.
                      type: string
                    key:
                      description: Required. The taint key to be applied to a node.
                      type: string
                    timeAdded:
                      description: TimeAdded represents the time at which the taint
                        was added. It is only written for NoExecute taints.
                      format: date-time
                      type: string
                    value:
                      description: The taint value corresponding to the taint key.
                      type: string
                  required:
                  - effect
                  - key
                  type: object
                type: array
            required:
            - clusterDeploymentRef
            - name
            - platform
            type: object
          status:
            description: MachinePoolStatus defines the observed state of MachinePool
            properties:
              conditions:
                description: Conditions includes more detailed status for the cluster
                  deployment
                items:
                  description: MachinePoolCondition contains details for the current
                    condition of a machine pool
                  properties:
                    lastProbeTime:
                      description: LastProbeTime is the last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is a unique, one-word, CamelCase reason
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              machineSets:
                description: MachineSets is the status of the machine sets for the
                  machine pool on the remote cluster.
                items:
                  description: MachineSetStatus is the status of a machineset in the
                    remote cluster.
                  properties:
                    errorMessage:
                      type: string
                    errorReason:
                      description: In the event that there is a terminal problem reconciling
                        the replicas, both ErrorReason and ErrorMessage will be set.
                        ErrorReason will be populated with a succinct value suitable
                        for machine interpretation, while ErrorMessage will contain
                        a more verbose string suitable for logging and human consumption.
                      type: string
                    maxReplicas:
                      description: MaxReplicas is the maximum number of replicas for
                        the machine set.
                      format: int32
                      type: integer
                    minReplicas:
                      description: MinReplicas is the minimum number of replicas for
                        the machine set.
                      format: int32
                      type: integer
                    name:
                      description: Name is the name of the machine set.
                      type: string
                    readyReplicas:
                      description: The number of ready replicas for this MachineSet.
                        A machine is considered ready when the node has been created
                        and is "Ready". It is transferred as-is from the MachineSet
                        from remote cluster.
                      format: int32
                      type: integer
                    replicas:
                      description: Replicas is the current number of replicas for
                        the machine set.
                      format: int32
                      type: integer
                  required:
                  - maxReplicas
                  - minReplicas
                  - name
                  - replicas
                  type: object
                type: array
              ownedLabels:
                description: OwnedLabels lists the keys of labels this MachinePool
                  created on the remote MachineSet. Used to identify labels to remove
                  from the remote MachineSet when they are absent from the MachinePool's
                  spec.labels.
                items:
                  type: string
                type: array
              ownedTaints:
                description: OwnedTaints lists identifiers of taints this MachinePool
                  created on the remote MachineSet. Used to identify taints to remove
                  from the remote MachineSet when they are absent from the MachinePool's
                  spec.taints.
                items:
                  description: TaintIdentifier uniquely identifies a Taint. (It turns
                    out taints are mutually exclusive by key+effect, not simply by
                    key.)
                  properties:
                    effect:
                      description: Effect matches corev1.Taint.Effect.
                      type: string
                    key:
                      description: Key matches corev1.Taint.Key.
                      type: string
                  type: object
                type: array
              replicas:
                description: Replicas is the current number of replicas for the machine
                  pool.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
