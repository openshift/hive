// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	hivev1 "github.com/openshift/hive/apis/hive/v1"
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ClusterProvisionSpecApplyConfiguration represents an declarative configuration of the ClusterProvisionSpec type for use
// with apply.
type ClusterProvisionSpecApplyConfiguration struct {
	ClusterDeploymentRef     *v1.LocalObjectReference      `json:"clusterDeploymentRef,omitempty"`
	PodSpec                  *v1.PodSpec                   `json:"podSpec,omitempty"`
	Attempt                  *int                          `json:"attempt,omitempty"`
	Stage                    *hivev1.ClusterProvisionStage `json:"stage,omitempty"`
	ClusterID                *string                       `json:"clusterID,omitempty"`
	InfraID                  *string                       `json:"infraID,omitempty"`
	InstallLog               *string                       `json:"installLog,omitempty"`
	Metadata                 *runtime.RawExtension         `json:"metadata,omitempty"`
	MetadataJSON             []byte                        `json:"metadataJSON,omitempty"`
	AdminKubeconfigSecretRef *v1.LocalObjectReference      `json:"adminKubeconfigSecretRef,omitempty"`
	AdminPasswordSecretRef   *v1.LocalObjectReference      `json:"adminPasswordSecretRef,omitempty"`
	PrevClusterID            *string                       `json:"prevClusterID,omitempty"`
	PrevInfraID              *string                       `json:"prevInfraID,omitempty"`
	PrevProvisionName        *string                       `json:"prevProvisionName,omitempty"`
}

// ClusterProvisionSpecApplyConfiguration constructs an declarative configuration of the ClusterProvisionSpec type for use with
// apply.
func ClusterProvisionSpec() *ClusterProvisionSpecApplyConfiguration {
	return &ClusterProvisionSpecApplyConfiguration{}
}

// WithClusterDeploymentRef sets the ClusterDeploymentRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterDeploymentRef field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithClusterDeploymentRef(value v1.LocalObjectReference) *ClusterProvisionSpecApplyConfiguration {
	b.ClusterDeploymentRef = &value
	return b
}

// WithPodSpec sets the PodSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PodSpec field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithPodSpec(value v1.PodSpec) *ClusterProvisionSpecApplyConfiguration {
	b.PodSpec = &value
	return b
}

// WithAttempt sets the Attempt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Attempt field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithAttempt(value int) *ClusterProvisionSpecApplyConfiguration {
	b.Attempt = &value
	return b
}

// WithStage sets the Stage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Stage field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithStage(value hivev1.ClusterProvisionStage) *ClusterProvisionSpecApplyConfiguration {
	b.Stage = &value
	return b
}

// WithClusterID sets the ClusterID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterID field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithClusterID(value string) *ClusterProvisionSpecApplyConfiguration {
	b.ClusterID = &value
	return b
}

// WithInfraID sets the InfraID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InfraID field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithInfraID(value string) *ClusterProvisionSpecApplyConfiguration {
	b.InfraID = &value
	return b
}

// WithInstallLog sets the InstallLog field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallLog field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithInstallLog(value string) *ClusterProvisionSpecApplyConfiguration {
	b.InstallLog = &value
	return b
}

// WithMetadata sets the Metadata field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Metadata field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithMetadata(value runtime.RawExtension) *ClusterProvisionSpecApplyConfiguration {
	b.Metadata = &value
	return b
}

// WithMetadataJSON adds the given value to the MetadataJSON field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the MetadataJSON field.
func (b *ClusterProvisionSpecApplyConfiguration) WithMetadataJSON(values ...byte) *ClusterProvisionSpecApplyConfiguration {
	for i := range values {
		b.MetadataJSON = append(b.MetadataJSON, values[i])
	}
	return b
}

// WithAdminKubeconfigSecretRef sets the AdminKubeconfigSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AdminKubeconfigSecretRef field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithAdminKubeconfigSecretRef(value v1.LocalObjectReference) *ClusterProvisionSpecApplyConfiguration {
	b.AdminKubeconfigSecretRef = &value
	return b
}

// WithAdminPasswordSecretRef sets the AdminPasswordSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AdminPasswordSecretRef field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithAdminPasswordSecretRef(value v1.LocalObjectReference) *ClusterProvisionSpecApplyConfiguration {
	b.AdminPasswordSecretRef = &value
	return b
}

// WithPrevClusterID sets the PrevClusterID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrevClusterID field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithPrevClusterID(value string) *ClusterProvisionSpecApplyConfiguration {
	b.PrevClusterID = &value
	return b
}

// WithPrevInfraID sets the PrevInfraID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrevInfraID field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithPrevInfraID(value string) *ClusterProvisionSpecApplyConfiguration {
	b.PrevInfraID = &value
	return b
}

// WithPrevProvisionName sets the PrevProvisionName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrevProvisionName field is set to the value of the last call.
func (b *ClusterProvisionSpecApplyConfiguration) WithPrevProvisionName(value string) *ClusterProvisionSpecApplyConfiguration {
	b.PrevProvisionName = &value
	return b
}
