// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ClusterDeploymentCustomizationSpecApplyConfiguration represents an declarative configuration of the ClusterDeploymentCustomizationSpec type for use
// with apply.
type ClusterDeploymentCustomizationSpecApplyConfiguration struct {
	InstallConfigPatches []PatchEntityApplyConfiguration `json:"installConfigPatches,omitempty"`
}

// ClusterDeploymentCustomizationSpecApplyConfiguration constructs an declarative configuration of the ClusterDeploymentCustomizationSpec type for use with
// apply.
func ClusterDeploymentCustomizationSpec() *ClusterDeploymentCustomizationSpecApplyConfiguration {
	return &ClusterDeploymentCustomizationSpecApplyConfiguration{}
}

// WithInstallConfigPatches adds the given value to the InstallConfigPatches field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the InstallConfigPatches field.
func (b *ClusterDeploymentCustomizationSpecApplyConfiguration) WithInstallConfigPatches(values ...*PatchEntityApplyConfiguration) *ClusterDeploymentCustomizationSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithInstallConfigPatches")
		}
		b.InstallConfigPatches = append(b.InstallConfigPatches, *values[i])
	}
	return b
}
