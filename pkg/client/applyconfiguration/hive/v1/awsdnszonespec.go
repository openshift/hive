// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	aws "github.com/openshift/hive/apis/hive/v1/aws"
	v1 "k8s.io/api/core/v1"
)

// AWSDNSZoneSpecApplyConfiguration represents an declarative configuration of the AWSDNSZoneSpec type for use
// with apply.
type AWSDNSZoneSpecApplyConfiguration struct {
	CredentialsSecretRef  *v1.LocalObjectReference           `json:"credentialsSecretRef,omitempty"`
	CredentialsAssumeRole *aws.AssumeRole                    `json:"credentialsAssumeRole,omitempty"`
	AdditionalTags        []AWSResourceTagApplyConfiguration `json:"additionalTags,omitempty"`
	Region                *string                            `json:"region,omitempty"`
}

// AWSDNSZoneSpecApplyConfiguration constructs an declarative configuration of the AWSDNSZoneSpec type for use with
// apply.
func AWSDNSZoneSpec() *AWSDNSZoneSpecApplyConfiguration {
	return &AWSDNSZoneSpecApplyConfiguration{}
}

// WithCredentialsSecretRef sets the CredentialsSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CredentialsSecretRef field is set to the value of the last call.
func (b *AWSDNSZoneSpecApplyConfiguration) WithCredentialsSecretRef(value v1.LocalObjectReference) *AWSDNSZoneSpecApplyConfiguration {
	b.CredentialsSecretRef = &value
	return b
}

// WithCredentialsAssumeRole sets the CredentialsAssumeRole field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CredentialsAssumeRole field is set to the value of the last call.
func (b *AWSDNSZoneSpecApplyConfiguration) WithCredentialsAssumeRole(value aws.AssumeRole) *AWSDNSZoneSpecApplyConfiguration {
	b.CredentialsAssumeRole = &value
	return b
}

// WithAdditionalTags adds the given value to the AdditionalTags field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the AdditionalTags field.
func (b *AWSDNSZoneSpecApplyConfiguration) WithAdditionalTags(values ...*AWSResourceTagApplyConfiguration) *AWSDNSZoneSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithAdditionalTags")
		}
		b.AdditionalTags = append(b.AdditionalTags, *values[i])
	}
	return b
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *AWSDNSZoneSpecApplyConfiguration) WithRegion(value string) *AWSDNSZoneSpecApplyConfiguration {
	b.Region = &value
	return b
}
