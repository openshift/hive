// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// ProvisioningApplyConfiguration represents an declarative configuration of the Provisioning type for use
// with apply.
type ProvisioningApplyConfiguration struct {
	InstallConfigSecretRef *v1.LocalObjectReference                    `json:"installConfigSecretRef,omitempty"`
	ReleaseImage           *string                                     `json:"releaseImage,omitempty"`
	InstallerImageOverride *string                                     `json:"installerImageOverride,omitempty"`
	ImageSetRef            *ClusterImageSetReferenceApplyConfiguration `json:"imageSetRef,omitempty"`
	ManifestsConfigMapRef  *v1.LocalObjectReference                    `json:"manifestsConfigMapRef,omitempty"`
	ManifestsSecretRef     *v1.LocalObjectReference                    `json:"manifestsSecretRef,omitempty"`
	SSHPrivateKeySecretRef *v1.LocalObjectReference                    `json:"sshPrivateKeySecretRef,omitempty"`
	SSHKnownHosts          []string                                    `json:"sshKnownHosts,omitempty"`
	InstallerEnv           []v1.EnvVar                                 `json:"installerEnv,omitempty"`
}

// ProvisioningApplyConfiguration constructs an declarative configuration of the Provisioning type for use with
// apply.
func Provisioning() *ProvisioningApplyConfiguration {
	return &ProvisioningApplyConfiguration{}
}

// WithInstallConfigSecretRef sets the InstallConfigSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallConfigSecretRef field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithInstallConfigSecretRef(value v1.LocalObjectReference) *ProvisioningApplyConfiguration {
	b.InstallConfigSecretRef = &value
	return b
}

// WithReleaseImage sets the ReleaseImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReleaseImage field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithReleaseImage(value string) *ProvisioningApplyConfiguration {
	b.ReleaseImage = &value
	return b
}

// WithInstallerImageOverride sets the InstallerImageOverride field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallerImageOverride field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithInstallerImageOverride(value string) *ProvisioningApplyConfiguration {
	b.InstallerImageOverride = &value
	return b
}

// WithImageSetRef sets the ImageSetRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageSetRef field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithImageSetRef(value *ClusterImageSetReferenceApplyConfiguration) *ProvisioningApplyConfiguration {
	b.ImageSetRef = value
	return b
}

// WithManifestsConfigMapRef sets the ManifestsConfigMapRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ManifestsConfigMapRef field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithManifestsConfigMapRef(value v1.LocalObjectReference) *ProvisioningApplyConfiguration {
	b.ManifestsConfigMapRef = &value
	return b
}

// WithManifestsSecretRef sets the ManifestsSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ManifestsSecretRef field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithManifestsSecretRef(value v1.LocalObjectReference) *ProvisioningApplyConfiguration {
	b.ManifestsSecretRef = &value
	return b
}

// WithSSHPrivateKeySecretRef sets the SSHPrivateKeySecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SSHPrivateKeySecretRef field is set to the value of the last call.
func (b *ProvisioningApplyConfiguration) WithSSHPrivateKeySecretRef(value v1.LocalObjectReference) *ProvisioningApplyConfiguration {
	b.SSHPrivateKeySecretRef = &value
	return b
}

// WithSSHKnownHosts adds the given value to the SSHKnownHosts field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the SSHKnownHosts field.
func (b *ProvisioningApplyConfiguration) WithSSHKnownHosts(values ...string) *ProvisioningApplyConfiguration {
	for i := range values {
		b.SSHKnownHosts = append(b.SSHKnownHosts, values[i])
	}
	return b
}

// WithInstallerEnv adds the given value to the InstallerEnv field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the InstallerEnv field.
func (b *ProvisioningApplyConfiguration) WithInstallerEnv(values ...v1.EnvVar) *ProvisioningApplyConfiguration {
	for i := range values {
		b.InstallerEnv = append(b.InstallerEnv, values[i])
	}
	return b
}
