// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// SyncResourceReferenceApplyConfiguration represents an declarative configuration of the SyncResourceReference type for use
// with apply.
type SyncResourceReferenceApplyConfiguration struct {
	APIVersion *string `json:"apiVersion,omitempty"`
	Kind       *string `json:"kind,omitempty"`
	Name       *string `json:"name,omitempty"`
	Namespace  *string `json:"namespace,omitempty"`
}

// SyncResourceReferenceApplyConfiguration constructs an declarative configuration of the SyncResourceReference type for use with
// apply.
func SyncResourceReference() *SyncResourceReferenceApplyConfiguration {
	return &SyncResourceReferenceApplyConfiguration{}
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *SyncResourceReferenceApplyConfiguration) WithAPIVersion(value string) *SyncResourceReferenceApplyConfiguration {
	b.APIVersion = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *SyncResourceReferenceApplyConfiguration) WithKind(value string) *SyncResourceReferenceApplyConfiguration {
	b.Kind = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *SyncResourceReferenceApplyConfiguration) WithName(value string) *SyncResourceReferenceApplyConfiguration {
	b.Name = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *SyncResourceReferenceApplyConfiguration) WithNamespace(value string) *SyncResourceReferenceApplyConfiguration {
	b.Namespace = &value
	return b
}
